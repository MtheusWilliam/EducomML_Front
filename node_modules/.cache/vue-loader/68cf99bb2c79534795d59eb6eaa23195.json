{"remainingRequest":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vitor/Documentos/EducomML/EducomML_Front/master/src/components/instructional_model/ProcedureDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/src/components/instructional_model/ProcedureDialog.vue","mtime":1594992100003},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js","mtime":1593613513250},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/babel-loader/lib/index.js","mtime":1593613513143},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vuetify-loader/lib/loader.js","mtime":1593613518416},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js","mtime":1593613513250},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vue-loader/lib/index.js","mtime":1593613518353}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvY2VkdXJlRGlhbG9nIiwKICBwcm9wczogWyJkaWFsb2ciLCAicHJvY2VkdXJlIiwgImNvbmNlcHQiLCAibW9kdWxlIl0sCiAgZGF0YTogKCkgPT4gKHsKICAgIHZhbGlkOiB0cnVlLAogICAgZGlhbG9nX2FsZXJ0OiBmYWxzZSwKICAgIGF1eEl0ZW1JbmZvOiAiIiwKICAgIHBoYXNlc0NvbnRyb2w6IFtdLAogICAgcGhhc2VzQ29udHJvbFJ1bGVzOiBbCiAgICAgIHYgPT4KICAgICAgICAhIXYgfHwgIsOJIG5lY2Vzc8OhcmlvIGluc2VyaXIgYWxndW0gY29udGXDumRvIG5lc3NhIGV0YXBhIGRvIHByb2NlZGltZW50byIKICAgIF0sCiAgICBwcm9jZWR1cmVOYW1lOiAiIiwKICAgIHByb2NlZHVyZU5hbWVSdWxlczogWwogICAgICB2ID0+ICEhdiB8fCAiw4kgbmVjZXNzw6FyaW8gZGVzY3JldmVyIG8gbm9tZSBkbyBwcm9jZWRpbWVudG8iLAogICAgICB2ID0+CiAgICAgICAgKHYgJiYgdi5sZW5ndGggPD0gMTAwKSB8fAogICAgICAgICJOb21lIGRvIHByb2NlZGltZW50byBkZXZlIHRlciBubyBtw6F4aW1vIDI1IGNhcmFjdGVyZXMiCiAgICBdLAogICAgcHJvY2VkdXJlRGVzY3JpcHRpb246ICIiLAogICAgcHJvY2VkdXJlRGVzY3JpcHRpb25SdWxlczogWwogICAgICB2ID0+CiAgICAgICAgISF2IHx8CiAgICAgICAgIsOJIG5lY2Vzc8OhcmlvIGluc2VyaXIgdW1hIGRlc2NyacOnw6NvIGRvIHByb2NlZGltZW50byBhIHNlciBpbnNlcmlkbyIKICAgIF0KICB9KSwKICB3YXRjaDogewogICAgZGlhbG9nOiBmdW5jdGlvbigpIHsKICAgICAgdGhpcy5nZXRQcm9jZWR1cmUoKTsKICAgIH0sCiAgICBwcm9jZWR1cmU6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmdldFByb2NlZHVyZSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLmdldFByb2NlZHVyZSgpOwogICAgdGhpcy4kcmVmcy5mb3JtLnJlc2V0VmFsaWRhdGlvbigpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UHJvY2VkdXJlKCkgewogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpIHsKICAgICAgICB2bS5wcm9jZWR1cmVOYW1lID0gdm0ucHJvY2VkdXJlLm5hbWVpbmZvcm1hdGlvbml0ZW07CiAgICAgICAgdm0ucHJvY2VkdXJlRGVzY3JpcHRpb24gPSB2bS5wcm9jZWR1cmUuZGVzY3JpcHRpb25pbmZvcm1hdGlvbml0ZW07CiAgICAgIH0pOwogICAgICB0aGlzLnBoYXNlc0NvbnRyb2wgPSBbXTsKICAgICAgaWYgKHRoaXMucHJvY2VkdXJlICE9PSAiIikgewogICAgICAgIHRoaXMucHJvY2VkdXJlLnBoYXNlcHJvY2VkdXJlcy5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgICAgdGhpcy5waGFzZXNDb250cm9sLnB1c2goewogICAgICAgICAgICBkZXNjcmlwdGlvbjogZWxlbWVudC5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgdXJsOiBlbGVtZW50LnVybAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBhbHRlcmFfQ3JpYV9Qcm9jZWRpbWVudG8oKSB7CiAgICAgIHZhciB2bSA9IHRoaXM7CiAgICAgIGlmICh0aGlzLnByb2NlZHVyZSA9PT0gIiIpIHsKICAgICAgICBhd2FpdCBheGlvcwogICAgICAgICAgLnBvc3QoCiAgICAgICAgICAgIGBodHRwOi8vbG9jYWxob3N0OjgwMDAvaW5mb3JtYXRpb25pdGVtL2AsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1laW5mb3JtYXRpb25pdGVtOiB0aGlzLnByb2NlZHVyZU5hbWUsCiAgICAgICAgICAgICAgZGVzY3JpcHRpb25pbmZvcm1hdGlvbml0ZW06IHRoaXMucHJvY2VkdXJlRGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgZmtfaW5mb3JtYXRpb25pdGVtdHlwZTogYGh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9pbmZvcm1hdGlvbml0ZW10eXBlLzQvYCwKICAgICAgICAgICAgICBma19pZGNvbmNlcHQ6IHRoaXMuY29uY2VwdC51cmwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF1dGg6IHsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAiYWRtaW4iLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6ICJhZG1pbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICkKICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3Bvc3RhKSB7CiAgICAgICAgICAgIHZtLmF1eEl0ZW1JbmZvID0gcmVzcG9zdGEuZGF0YS51cmw7CiAgICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhd2FpdCBheGlvcwogICAgICAgICAgLnB1dCgKICAgICAgICAgICAgYGh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9pbmZvcm1hdGlvbml0ZW0vYCArCiAgICAgICAgICAgICAgdGhpcy5wcm9jZWR1cmUuaWRpbmZvcm1hdGlvbml0ZW0gKwogICAgICAgICAgICAgIGAvYCwKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWVpbmZvcm1hdGlvbml0ZW06IHRoaXMucHJvY2VkdXJlTmFtZSwKICAgICAgICAgICAgICBkZXNjcmlwdGlvbmluZm9ybWF0aW9uaXRlbTogdGhpcy5wcm9jZWR1cmVEZXNjcmlwdGlvbiwKICAgICAgICAgICAgICBma19pbmZvcm1hdGlvbml0ZW10eXBlOiBgaHR0cDovL2xvY2FsaG9zdDo4MDAwL2luZm9ybWF0aW9uaXRlbXR5cGUvNC9gLAogICAgICAgICAgICAgIGZrX2lkY29uY2VwdDogdGhpcy5jb25jZXB0LnVybAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXV0aDogewogICAgICAgICAgICAgICAgdXNlcm5hbWU6ICJhZG1pbiIsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogImFkbWluIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgKQogICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9zdGEpIHsKICAgICAgICAgICAgdm0uYXV4SXRlbUluZm8gPSByZXNwb3N0YS5kYXRhLnVybDsKICAgICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgYWx0ZXJhX0NyaWFfRmFzZXMoKSB7CiAgICAgIHZhciB2bSA9IHRoaXM7CiAgICAgIHRoaXMucGhhc2VzQ29udHJvbC5mb3JFYWNoKGFzeW5jIGZ1bmN0aW9uKGVsZW1lbnQsIGluZGV4KSB7CiAgICAgICAgaWYgKGVsZW1lbnQudXJsID09PSBudWxsKSB7CiAgICAgICAgICBhd2FpdCBheGlvcy5wb3N0KAogICAgICAgICAgICBgaHR0cDovL2xvY2FsaG9zdDo4MDAwL3BoYXNlcHJvY2VkdXJlL2AsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvcmRlcjogaW5kZXggKyAxLAogICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBlbGVtZW50LmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgIGZrX2luZm9ybWF0aW9uaXRlbTogdm0uYXV4SXRlbUluZm8KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF1dGg6IHsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAiYWRtaW4iLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6ICJhZG1pbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGF3YWl0IGF4aW9zLnB1dCgKICAgICAgICAgICAgZWxlbWVudC51cmwsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvcmRlcjogaW5kZXggKyAxLAogICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBlbGVtZW50LmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgIGZrX2luZm9ybWF0aW9uaXRlbTogdm0uYXV4SXRlbUluZm8KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF1dGg6IHsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAiYWRtaW4iLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6ICJhZG1pbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgYXN5bmMgdmFsaWRhdGUoKSB7CiAgICAgIGlmICh0aGlzLiRyZWZzLmZvcm0udmFsaWRhdGUoKSkgewogICAgICAgIGlmICh0aGlzLnBoYXNlc0NvbnRyb2wubGVuZ3RoID4gMCkgewogICAgICAgICAgdmFyIGkgPSB0aGlzLnBoYXNlc0NvbnRyb2wubGVuZ3RoOwogICAgICAgICAgYXdhaXQgdGhpcy5hbHRlcmFfQ3JpYV9Qcm9jZWRpbWVudG8oKTsKICAgICAgICAgIGF3YWl0IHRoaXMuYWx0ZXJhX0NyaWFfRmFzZXMoKTsKICAgICAgICAgIHRoaXMucGhhc2VzQ29udHJvbCA9IFtdOwogICAgICAgICAgYXdhaXQgdGhpcy4kZW1pdCgiY2xvc2UiLCBpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5kaWFsb2dfYWxlcnQgPSB0cnVlOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHJlc2V0KCkgewogICAgICB0aGlzLiRyZWZzLmZvcm0ucmVzZXQoKTsKICAgICAgdGhpcy5waGFzZXNDb250cm9sID0gW107CiAgICAgIHRoaXMuJGVtaXQoImNsb3NlIik7CiAgICB9LAogICAgYWRkUGhhc2UoKSB7CiAgICAgIHRoaXMucGhhc2VzQ29udHJvbC5wdXNoKHsKICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCwKICAgICAgICB1cmw6IG51bGwKICAgICAgfSk7CiAgICB9LAogICAgYXN5bmMgZGVsZXRhUGhhc2UoaWRQaGFzZSkgewogICAgICBpZiAodGhpcy5waGFzZXNDb250cm9sW2lkUGhhc2VdLnVybCAhPT0gbnVsbCkgewogICAgICAgIGF3YWl0IGF4aW9zLmRlbGV0ZSh0aGlzLnBoYXNlc0NvbnRyb2xbaWRQaGFzZV0udXJsLCB7CiAgICAgICAgICBhdXRoOiB7CiAgICAgICAgICAgIHVzZXJuYW1lOiAiYWRtaW4iLAogICAgICAgICAgICBwYXNzd29yZDogImFkbWluIgogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGF3YWl0IHRoaXMuYWx0ZXJhX0NyaWFfRmFzZXMoKTsKICAgICAgfQogICAgICBpZiAoaWRQaGFzZSA9PSAwKSB7CiAgICAgICAgdGhpcy5waGFzZXNDb250cm9sLnNoaWZ0KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5waGFzZXNDb250cm9sLnNwbGljZShpZFBoYXNlLCAxKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["ProcedureDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"ProcedureDialog.vue","sourceRoot":"src/components/instructional_model","sourcesContent":["<template>\n  <v-container class=\"pa-0\">\n    <v-card>\n      <v-card-title style=\"background-color:#63B0B0; color:white;\">\n        <span class=\"headline\">\n          <p>Descreva o procedimento a ser criado.</p>\n        </span>\n      </v-card-title>\n      <v-card-text>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation class=\"mt-3\">\n          <label class=\"pt-2\" style=\"font-size:1.3em;\" for=\"procedureNameArea\">\n            <strong>Identificador do procedimento:</strong>\n          </label>\n          <v-text-field\n            id=\"procedureNameArea\"\n            v-model=\"procedureName\"\n            :counter=\"100\"\n            :rules=\"procedureNameRules\"\n            required\n            class=\"mt-2 mb-4\"\n          ></v-text-field>\n          <label class=\"pt-2\" style=\"font-size:1.3em;\" for=\"procedureDescriptionArea\">\n            <strong>Escreva a descrição do procedimento:</strong>\n          </label>\n          <v-textarea\n            id=\"procedureDescriptionArea\"\n            v-model=\"procedureDescription\"\n            :rules=\"procedureDescriptionRules\"\n            background-color=\"#F2F3F3\"\n            clearable\n            clear-icon=\"mdi-close-circle\"\n            class=\"mt-2\"\n            name=\"input-3-1\"\n            filled\n            auto-grow\n            required\n          ></v-textarea>\n          <v-app-bar color=\"#D2A64D\" dense dark height=\"45px\">\n            <v-toolbar-title style=\"font-size:1.2em;\">\n              <strong>Lista de fases do procedimento</strong>\n            </v-toolbar-title>\n          </v-app-bar>\n          <v-container>\n            <v-row style=\"height:50px;\">\n              <v-col cols=\"3\">\n                <strong>\n                  <p style=\"font-size:1.2em;\">Ordem da fase</p>\n                </strong>\n              </v-col>\n              <v-col cols=\"8\">\n                <strong>\n                  <p style=\"font-size:1.2em;\">Descrição da fase</p>\n                </strong>\n              </v-col>\n              <v-col cols=\"1\">\n                <v-btn icon=\"icon\">\n                  <v-icon large class=\"mb-3\" color=\"primary\" @click=\"addPhase()\">mdi-plus-box</v-icon>\n                </v-btn>\n              </v-col>\n            </v-row>\n\n            <v-row v-for=\"(item,i) in phasesControl\" :key=\"i\">\n              <v-col cols=\"3\" style=\"text-align:center; font-size: 1.8em; margin-top:10px;\">{{i+1}}º</v-col>\n              <v-col cols=\"8\">\n                <v-textarea\n                  style=\"margin-top: -10px;\"\n                  v-model=\"phasesControl[i].description\"\n                  background-color=\"#F2F3F3\"\n                  :rules=\"phasesControlRules\"\n                  rows=\"2\"\n                  clearable\n                  clear-icon=\"mdi-close-circle\"\n                  filled\n                  auto-grow\n                  required\n                ></v-textarea>\n              </v-col>\n              <v-col cols=\"1\">\n                <v-btn icon=\"icon\">\n                  <v-icon large color=\"red\" @click=\"deletaPhase(i)\">mdi-minus-box</v-icon>\n                </v-btn>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-form>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"red\" height=\"49\" dark large @click=\"reset()\">\n          Close\n          <v-icon dark right>mdi-close</v-icon>\n        </v-btn>\n        <v-btn color=\"success\" height=\"49\" dark large @click=\"validate()\">\n          Save\n          <v-icon dark right>mdi-content-save</v-icon>\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n    <div class=\"text-center\">\n      <v-dialog v-model=\"dialog_alert\" width=\"500\">\n        <v-card>\n          <v-card-title class=\"headline red\" primary-title style=\"color:white;\">ALERTA!</v-card-title>\n          <v-card-text\n            class=\"mt-3\"\n            style=\"font-size: 1.3em;\"\n          >Para criar um procedimento, é necessário criar pelo menos uma etapa.</v-card-text>\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" text @click=\"dialog_alert = false\">Ok</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"ProcedureDialog\",\n  props: [\"dialog\", \"procedure\", \"concept\", \"module\"],\n  data: () => ({\n    valid: true,\n    dialog_alert: false,\n    auxItemInfo: \"\",\n    phasesControl: [],\n    phasesControlRules: [\n      v =>\n        !!v || \"É necessário inserir algum conteúdo nessa etapa do procedimento\"\n    ],\n    procedureName: \"\",\n    procedureNameRules: [\n      v => !!v || \"É necessário descrever o nome do procedimento\",\n      v =>\n        (v && v.length <= 100) ||\n        \"Nome do procedimento deve ter no máximo 25 caracteres\"\n    ],\n    procedureDescription: \"\",\n    procedureDescriptionRules: [\n      v =>\n        !!v ||\n        \"É necessário inserir uma descrição do procedimento a ser inserido\"\n    ]\n  }),\n  watch: {\n    dialog: function() {\n      this.getProcedure();\n    },\n    procedure: function() {\n      this.getProcedure();\n    }\n  },\n  mounted: function() {\n    this.getProcedure();\n    this.$refs.form.resetValidation();\n  },\n  methods: {\n    getProcedure() {\n      var vm = this;\n      this.$nextTick(function() {\n        vm.procedureName = vm.procedure.nameinformationitem;\n        vm.procedureDescription = vm.procedure.descriptioninformationitem;\n      });\n      this.phasesControl = [];\n      if (this.procedure !== \"\") {\n        this.procedure.phaseprocedures.forEach(element => {\n          this.phasesControl.push({\n            description: element.description,\n            url: element.url\n          });\n        });\n      }\n    },\n    async altera_Cria_Procedimento() {\n      var vm = this;\n      if (this.procedure === \"\") {\n        await axios\n          .post(\n            `http://localhost:8000/informationitem/`,\n            {\n              nameinformationitem: this.procedureName,\n              descriptioninformationitem: this.procedureDescription,\n              fk_informationitemtype: `http://localhost:8000/informationitemtype/4/`,\n              fk_idconcept: this.concept.url\n            },\n            {\n              auth: {\n                username: \"admin\",\n                password: \"admin\"\n              }\n            }\n          )\n          .then(function(resposta) {\n            vm.auxItemInfo = resposta.data.url;\n          });\n      } else {\n        await axios\n          .put(\n            `http://localhost:8000/informationitem/` +\n              this.procedure.idinformationitem +\n              `/`,\n            {\n              nameinformationitem: this.procedureName,\n              descriptioninformationitem: this.procedureDescription,\n              fk_informationitemtype: `http://localhost:8000/informationitemtype/4/`,\n              fk_idconcept: this.concept.url\n            },\n            {\n              auth: {\n                username: \"admin\",\n                password: \"admin\"\n              }\n            }\n          )\n          .then(function(resposta) {\n            vm.auxItemInfo = resposta.data.url;\n          });\n      }\n    },\n    async altera_Cria_Fases() {\n      var vm = this;\n      this.phasesControl.forEach(async function(element, index) {\n        if (element.url === null) {\n          await axios.post(\n            `http://localhost:8000/phaseprocedure/`,\n            {\n              order: index + 1,\n              description: element.description,\n              fk_informationitem: vm.auxItemInfo\n            },\n            {\n              auth: {\n                username: \"admin\",\n                password: \"admin\"\n              }\n            }\n          );\n        } else {\n          await axios.put(\n            element.url,\n            {\n              order: index + 1,\n              description: element.description,\n              fk_informationitem: vm.auxItemInfo\n            },\n            {\n              auth: {\n                username: \"admin\",\n                password: \"admin\"\n              }\n            }\n          );\n        }\n      });\n    },\n\n    async validate() {\n      if (this.$refs.form.validate()) {\n        if (this.phasesControl.length > 0) {\n          var i = this.phasesControl.length;\n          await this.altera_Cria_Procedimento();\n          await this.altera_Cria_Fases();\n          this.phasesControl = [];\n          await this.$emit(\"close\", i);\n        } else {\n          this.dialog_alert = true;\n        }\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n      this.phasesControl = [];\n      this.$emit(\"close\");\n    },\n    addPhase() {\n      this.phasesControl.push({\n        description: null,\n        url: null\n      });\n    },\n    async deletaPhase(idPhase) {\n      if (this.phasesControl[idPhase].url !== null) {\n        await axios.delete(this.phasesControl[idPhase].url, {\n          auth: {\n            username: \"admin\",\n            password: \"admin\"\n          }\n        });\n        await this.altera_Cria_Fases();\n      }\n      if (idPhase == 0) {\n        this.phasesControl.shift();\n      } else {\n        this.phasesControl.splice(idPhase, 1);\n      }\n    }\n  }\n};\n</script>\n"]}]}