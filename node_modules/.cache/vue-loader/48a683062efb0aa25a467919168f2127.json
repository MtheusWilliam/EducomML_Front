{"remainingRequest":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\www\\EducomML\\EducomML_Front\\src\\components\\concept_model\\ConceitoDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\www\\EducomML\\EducomML_Front\\src\\components\\concept_model\\ConceitoDialog.vue","mtime":1597709343795},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1597353521000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConceitoDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"ConceitoDialog.vue","sourceRoot":"src/components/concept_model","sourcesContent":["<template>\n  <v-container class=\"pa-0; ml-0\">\n    <v-row>\n      <v-card min-height=\"530px\" min-width=\"750px\">\n        <v-card-title style=\"background-color:#63B0B0; color:white;\">\n          <span class=\"headline\">\n            <p v-if=\"concept\">{{ conceitoDialogHeader1 }}</p>\n            <p v-else>{{ conceitoDialogHeader2 }}</p>\n          </span>\n        </v-card-title>\n        <v-card-text>\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation=\"lazy-validation\">\n            <v-text-field\n              v-model=\"conceptName\"\n              :counter=\"100\"\n              :rules=\"conceptNameRules\"\n              label=\"Nome do conceito\"\n              required=\"required\"\n              class=\"mt-2\"\n            ></v-text-field>\n            <v-row>\n              <v-col cols=\"4\">\n                <v-btn\n                  style=\"margin-top: -10px;\"\n                  class=\"mb-2\"\n                  color=\"primary\"\n                  height=\"40\"\n                  dark\n                  small\n                  @click=\"openDidaticDialog('priorConcept')\"\n                >Conhecimentos Prévios</v-btn>\n              </v-col>\n            </v-row>\n            <div>\n              <v-app-bar color=\"#D2A64D\" dense=\"dense\" dark=\"dark\" height=\"45px\">\n                <v-toolbar-title style=\"font-size:1.2em;\">\n                  <strong>Lista de relacionamentos</strong>\n                </v-toolbar-title>\n              </v-app-bar>\n            </div>\n            <v-row class=\"mt-2\" style=\"height:50px;\">\n              <v-col>\n                <strong>\n                  <p>Conceito</p>\n                </strong>\n              </v-col>\n              <v-col>\n                <strong>\n                  <p>Nome da Relação</p>\n                </strong>\n              </v-col>\n              <v-col>\n                <strong>\n                  <p>Tipo da Relação</p>\n                </strong>\n              </v-col>\n              <v-col cols=\"1\">\n                <v-btn icon=\"icon\" class=\"mb-1\">\n                  <v-icon\n                    large=\"large\"\n                    class=\"mb-1\"\n                    color=\"primary\"\n                    @click=\"addRelacao()\"\n                  >mdi-plus-box</v-icon>\n                </v-btn>\n              </v-col>\n            </v-row>\n            <hr />\n            <v-row>\n              <v-container>\n                <v-row v-for=\"(item, i) in relationForControl\" :key=\"i\">\n                  <v-col>\n                    <v-select\n                      :class=\"alert\"\n                      v-model=\"relationForControl[i].conceptSelect\"\n                      :items=\"targetconcepts\"\n                      :rules=\"[(v) => !!v || 'Conceito é requerido']\"\n                      label=\"Conceito\"\n                      style=\"margin:0px;\"\n                      required=\"required\"\n                    ></v-select>\n                  </v-col>\n                  <v-col>\n                    <v-text-field\n                      v-model=\"relationForControl[i].relacaoName\"\n                      counter=\"100\"\n                      label=\"Nome da Relação\"\n                      style=\"margin:0px;\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col>\n                    <v-select\n                      :class=\"alert\"\n                      v-model=\"relationForControl[i].relacaoType\"\n                      :items=\"relacaoTypes\"\n                      :rules=\"[(v) => !!v || 'O tipo do conceito é requerido']\"\n                      label=\"Tipo da Relação\"\n                      style=\"margin:0px;\"\n                      required=\"required\"\n                    ></v-select>\n                  </v-col>\n                  <v-col cols=\"1\" class=\"mt-2\">\n                    <v-btn icon=\"icon\" class=\"mb-1\">\n                      <v-icon\n                        large=\"large\"\n                        class=\"mb-1\"\n                        color=\"red\"\n                        @click=\"deletaRelacao(i)\"\n                      >mdi-minus-box</v-icon>\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-row>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"red\" height=\"49\" dark=\"dark\" large=\"large\" @click=\"reset\">\n            Cancelar\n            <v-icon dark=\"dark\" right=\"right\">mdi-close</v-icon>\n          </v-btn>\n          <v-btn color=\"success\" height=\"49\" dark=\"dark\" large=\"large\" @click=\"validate\">\n            Salvar\n            <v-icon dark=\"dark\" right=\"right\">mdi-content-save</v-icon>\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport Api from \"@/services/Api\";\nexport default {\n  name: \"ConceitoDialog\",\n  props: [\"domain\", \"module\", \"concept\", \"dialog\"],\n  data: () => ({\n    conceitoDialogHeader1: \"Edite o conceito selecionado.\",\n    conceitoDialogHeader2:\n      \"Defina o conceito do módulo e seu(s) relacionamento(s).\",\n    alert: \"\",\n    auxSelectTeste: \"\",\n    auxConceito: \"\",\n    relationForControl: [],\n    valid: true,\n    targetconcepts: [],\n    conceptSelect: [\"\"],\n    conceptName: \"\",\n    conceptNameRules: [\n      (v) => !!v || \"É necessário descrever o nome do conceito\",\n      (v) =>\n        (v && v.length <= 100) ||\n        \"Nome do conceito deve ter no máximo 100 caracteres\",\n    ],\n    relacaoName: [\"\"],\n    relacaoNameRules: [\n      (v) => !!v || \"Necessário descrever o nome da relação\",\n      (v) =>\n        (v && v.length <= 100) ||\n        \"O nome da relação deve ter no máximo 100 caracteres\",\n    ],\n    relacaoType: [\"\"],\n    relacaoTypes: [\"typeOf\", \"partOf\"],\n    priorKnowledge: 2,\n    priorKnowledgeItems: [\n      {\n        text: \"Sim\",\n        value: 1,\n      },\n      {\n        text: \"Não\",\n        value: 2,\n      },\n    ],\n    priorKnowledgeName: \"\",\n    priorKnowledgeNameRules: [\n      (v) => !!v || \"Necessário descrever identificador para a prioridade\",\n      (v) =>\n        (v && v.length <= 100) ||\n        \"O identificador da prioridade deve ter no máximo 100 caracteres\",\n    ],\n    priorLevel: \"\",\n    priorLevelItems: [\n      {\n        text: \"Obrigatório\",\n        value: 1,\n      },\n      {\n        text: \"Desejável\",\n        value: 2,\n      },\n    ],\n  }),\n  watch: {\n    dialog: function () {\n      this.getConceito();\n    },\n    module: function () {\n      this.getConceito();\n    },\n  },\n  mounted: function () {\n    this.getConceito();\n    this.$refs.form.resetValidation();\n  },\n  methods: {\n    getConceito() {\n      var vm = this;\n      this.$nextTick(function () {\n        vm.conceptName = vm.concept.nameconcept;\n      });\n      this.targetconcepts = [];\n\n      if (this.domain.modules) {\n        this.domain.modules.forEach((module) => {\n          if (module.concepts) {\n            module.concepts.forEach((moduleConcept) => {\n              if (!this.concept || this.concept.url !== moduleConcept.url) {\n                this.targetconcepts.push({\n                  text: moduleConcept.nameconcept,\n                  value: moduleConcept,\n                });\n              }\n            });\n          }\n          if (module.submodules) {\n            module.submodules.forEach((submodule) => {\n              if (submodule.concepts) {\n                submodule.concepts.forEach((submoduleConcept) => {\n                  if (\n                    !this.concept ||\n                    this.concept.url !== submoduleConcept.url\n                  ) {\n                    this.targetconcepts.push({\n                      text: submoduleConcept.nameconcept,\n                      value: submoduleConcept,\n                    });\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n\n      if (this.concept !== \"\") {\n        if (this.concept.targetpriorknowledge.length > 0) {\n          vm.priorKnowledge = 1;\n          vm.priorKnowledgeName = this.concept.targetpriorknowledge[0].namepriorknowledge;\n          vm.priorLevel = parseInt(\n            this.concept.targetpriorknowledge[0].priorlevel.split(\"/\")[4]\n          );\n        } else {\n          vm.priorKnowledge = 2;\n        }\n        var i = 0;\n        this.concept.sourceconcept.forEach((element) => {\n          var conceptSelect = this.targetconcepts.find(function (conceito) {\n            return conceito.value.url === element.sourceconcept;\n          });\n          var auxConceptTarget = this.targetconcepts.find(function (conceito) {\n            return (\n              conceito.value.url ===\n              conceptSelect.value.sourceconcept[i].targetconcept\n            );\n          });\n          var type = \"\";\n          if (element.fk_referencetype.split(\"/\")[4] == \"1\") {\n            type = \"typeOf\";\n          } else {\n            type = \"partOf\";\n          }\n          this.relationForControl.push({\n            conceptSelect: auxConceptTarget,\n            relacaoName: element.namereference,\n            relacaoType: type,\n            url: element.url,\n          });\n          i++;\n        });\n      } else {\n        vm.priorKnowledge = 2;\n      }\n    },\n    async altera_Cria_Conceito() {\n      var vm = this;\n      if (this.concept === \"\") {\n        await Api()\n          .post(`/concept/`, {\n            nameconcept: this.conceptName,\n            fk_idknowledgedomain: this.domain.url,\n            fk_idmodule: this.module.url,\n          })\n          .then(async function (resposta) {\n            vm.auxConceito = resposta.data.url;\n            if (vm.$store.state.priorConcepts) {\n              vm.$store.state.priorConcepts.forEach(async (prior) => {\n                console.log(\"vamo quase\", prior);\n                console.log(`/priorlevel/` + prior.priorlevel + `/`);\n                console.log(prior.namepriorknowledge);\n                console.log(resposta.data.url);\n\n                await Api()\n                  .post(`/priorknowledge/`, {\n                    namepriorknowledge: prior.namepriorknowledge,\n                    priorlevel: `/priorlevel/` + prior.priorlevel + `/`,\n                    fk_priorsourceconcept: prior.fk_idconcept,\n                    fk_priortargetconcept: resposta.data.url,\n                  })\n                  .then(function () {\n                    vm.$store.dispatch(\"getPriorConcepts\", []);\n                  });\n              });\n            }\n          });\n      } else {\n        await Api().put(\"/concept/\" + this.concept.idconcept + \"/\", {\n          nameconcept: this.conceptName,\n          fk_idknowledgedomain: this.domain.url,\n          fk_idmodule: this.module.url,\n        });\n      }\n    },\n    async altera_Cria_Relacoes() {\n      this.relationForControl.forEach(async (element) => {\n        if (element.url === null) {\n          var auxReferencia = 0;\n          if (element.relacaoType == \"typeOf\") {\n            auxReferencia = 1;\n          } else if (element.relacaoType == \"partOf\") {\n            auxReferencia = 2;\n          }\n          await Api().post(`/reference/`, {\n            namereference: element.relacaoName,\n            sourceconcept: this.auxConceito,\n            targetconcept: element.conceptSelect.url,\n            fk_referencetype: `/referencetype/` + auxReferencia + \"/\",\n          });\n        } else {\n          auxReferencia = 0;\n          if (element.relacaoType == \"typeOf\") {\n            auxReferencia = 1;\n          } else if (element.relacaoType == \"partOf\") {\n            auxReferencia = 2;\n          }\n          await Api().put(element.url, {\n            namereference: element.relacaoName,\n            sourceconcept: this.auxConceito,\n            targetconcept: element.conceptSelect.value.url,\n            fk_referencetype: `/referencetype/` + auxReferencia + \"/\",\n          });\n        }\n      });\n    },\n    openDidaticDialog(dialog) {\n      this.$emit(\"openDidaticDialog\", dialog);\n    },\n    async validate() {\n      if (this.$refs.form.validate()) {\n        //await this.$refs.form.validate();\n        await this.altera_Cria_Conceito();\n        await this.altera_Cria_Relacoes();\n        //await this.$refs.form.reset();\n        this.relationForControl = [];\n        this.resetVariables();\n        this.$emit(\"close_or_save\", \"save\");\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n      this.relationForControl = [];\n      this.resetVariables();\n      this.$emit(\"close_or_save\", \"close\");\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    addRelacao() {\n      this.relationForControl.push({\n        conceptSelect: null,\n        relacaoName: null,\n        relacaoType: null,\n        url: null,\n      });\n    },\n    deletaRelacao(idRelacao) {\n      if (this.relationForControl[idRelacao].url !== null) {\n        Api().delete(this.relationForControl[idRelacao].url);\n      }\n      if (idRelacao == 0) {\n        this.relationForControl.shift();\n      } else {\n        this.relationForControl.splice(idRelacao, 1);\n      }\n    },\n    resetVariables() {\n      this.$store.dispatch(\"getPriorConcepts\", []);\n    },\n  },\n};\n</script>\n"]}]}