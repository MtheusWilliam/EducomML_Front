{"remainingRequest":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vitor/Documentos/EducomML/EducomML_Front/master/src/components/concept_model/ConceitoDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/src/components/concept_model/ConceitoDialog.vue","mtime":1594214363201},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js","mtime":1593613513250},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/babel-loader/lib/index.js","mtime":1593613513143},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vuetify-loader/lib/loader.js","mtime":1593613518416},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js","mtime":1593613513250},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vue-loader/lib/index.js","mtime":1593613518353}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConceitoDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ConceitoDialog.vue","sourceRoot":"src/components/concept_model","sourcesContent":["<template>\n    <v-container class=\"pa-0; ml-0\">\n        <v-row>\n            <v-card min-height=\"530px\" min-width=\"750px\">\n                <v-card-title style=\"background-color:#63B0B0; color:white;\">\n                    <span class=\"headline\">\n                        <p v-if=\"concept\">{{conceitoDialogHeader1}}</p>\n                        <p v-else>{{conceitoDialogHeader2}}</p>\n                    </span>\n                </v-card-title>\n                <v-card-text>\n                    <v-form ref=\"form\" v-model=\"valid\" lazy-validation=\"lazy-validation\">\n                        <v-text-field\n                            v-model=\"conceptName\"\n                            :counter=\"25\"\n                            :rules=\"conceptNameRules\"\n                            label=\"Nome do conceito\"\n                            required=\"required\"\n                            class=\"mt-2\"></v-text-field>\n                        <v-row>\n                            <v-col cols=\"4\">\n                                <v-select\n                                    v-model=\"priorKnowledge\"\n                                    :items=\"priorKnowledgeItems\"\n                                    label=\"Este conceito é prioritário?\"\n                                    style=\"margin:0px;\"\n                                    required=\"required\"></v-select>\n                            </v-col>\n                            <v-col cols=\"4\">\n                                <v-text-field\n                                    v-if=\"priorKnowledge === 1\"\n                                    v-model=\"priorKnowledgeName\"\n                                    counter=\"15\"\n                                    :rules=\"[v => !!v || 'Necessário informar o nome da prioridade']\"\n                                    label=\"Nome da Prioridade\"\n                                    style=\"margin:0px;\"\n                                    required=\"required\"></v-text-field>\n                            </v-col>\n                            <v-col cols=\"4\">\n                                <v-select\n                                    v-if=\"priorKnowledge === 1\"\n                                    v-model=\"priorLevel\"\n                                    :items=\"priorLevelItems\"\n                                    :rules=\"[v => !!v || 'Necessário informar o nível de prioridade']\"\n                                    label=\"Nível de prioridade\"\n                                    style=\"margin:0px;\"\n                                    required=\"required\"></v-select>\n                            </v-col>\n                        </v-row>\n                        <div>\n                            <v-app-bar color=\"#D2A64D\" dense=\"dense\" dark=\"dark\" height=\"45px\">\n                                <v-toolbar-title style=\"font-size:1.2em;\">\n                                    <strong>Lista de relacionamentos</strong>\n                                </v-toolbar-title>\n                            </v-app-bar>\n                        </div>\n                        <v-row class=\"mt-2\" style=\"height:50px;\">\n                            <v-col>\n                                <strong>\n                                    <p>Conceito</p>\n                                </strong>\n                            </v-col>\n                            <v-col>\n                                <strong>\n                                    <p>Nome da Relação</p>\n                                </strong>\n                            </v-col>\n                            <v-col>\n                                <strong>\n                                    <p>Tipo da Relação</p>\n                                </strong>\n                            </v-col>\n                            <v-col cols=\"1\">\n                                <v-btn icon=\"icon\" class=\"mb-1\">\n                                    <v-icon large=\"large\" class=\"mb-1\" color=\"primary\" @click=\"addRelacao()\">mdi-plus-box</v-icon>\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                        <hr/>\n                        <v-row>\n                            <v-container>\n                                <v-row v-for=\"(item,i) in relationForControl\" :key=\"i\">\n                                    <v-col>\n                                        <v-select\n                                            :class=\"alert\"\n                                            v-model=\"relationForControl[i].conceptSelect\"\n                                            :items=\"targetconcepts\"\n                                            :rules=\"[v => !!v || 'Conceito é requerido']\"\n                                            label=\"Conceito\"\n                                            style=\"margin:0px;\"\n                                            required=\"required\"></v-select>\n                                    </v-col>\n                                    <v-col>\n                                        <v-text-field\n                                            v-model=\"relationForControl[i].relacaoName\"\n                                            counter=\"15\"\n                                            label=\"Nome da Relação\"\n                                            style=\"margin:0px;\"></v-text-field>\n                                    </v-col>\n                                    <v-col>\n                                        <v-select\n                                            :class=\"alert\"\n                                            v-model=\"relationForControl[i].relacaoType\"\n                                            :items=\"relacaoTypes\"\n                                            :rules=\"[v => !!v || 'O tipo do conceito é requerido']\"\n                                            label=\"Tipo da Relação\"\n                                            style=\"margin:0px;\"\n                                            required=\"required\"></v-select>\n                                    </v-col>\n                                    <v-col cols=\"1\" class=\"mt-2\">\n                                        <v-btn icon=\"icon\" class=\"mb-1\">\n                                            <v-icon large=\"large\" class=\"mb-1\" color=\"red\" @click=\"deletaRelacao(i)\">mdi-minus-box</v-icon>\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-container>\n                        </v-row>\n                    </v-form>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"red\" height=\"49\" dark=\"dark\" large=\"large\" @click=\"reset\">\n                        Close\n                        <v-icon dark=\"dark\" right=\"right\">mdi-close</v-icon>\n                    </v-btn>\n                    <v-btn color=\"success\" height=\"49\" dark=\"dark\" large=\"large\" @click=\"validate\">\n                        Save\n                        <v-icon dark=\"dark\" right=\"right\">mdi-content-save</v-icon>\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\n    import axios from \"axios\";\n    export default {\n        name: \"ConceitoDialog\",\n        props: [\n            \"domain\", \"module\", \"concept\", \"dialog\"\n        ],\n        data: () => ({\n            conceitoDialogHeader1: \"Edite o conceito selecionado.\",\n            conceitoDialogHeader2: \"Defina o conceito do módulo e seu(s) relacionamento(s).\",\n            alert: \"\",\n            auxSelectTeste: \"\",\n            auxConceito: \"\",\n            relationForControl: [],\n            valid: true,\n            targetconcepts: [],\n            conceptSelect: [\"\"],\n            conceptName: \"\",\n            conceptNameRules: [\n                v => !!v || \"É necessário descrever o nome do conceito\",\n                v => (v && v.length <= 25) || \"Nome do conceito deve ter no máximo 25 caracteres\"\n            ],\n            relacaoName: [\"\"],\n            relacaoNameRules: [\n                v => !!v || \"Necessário descrever o nome da relação\",\n                v => (v && v.length <= 15) || \"O nome da relação deve ter no máximo 15 caracteres\"\n            ],\n            relacaoType: [\"\"],\n            relacaoTypes: [\n                \"typeOf\", \"partOf\"\n            ],\n            priorKnowledge: 2,\n            priorKnowledgeItems: [\n                {\n                    text: \"Sim\",\n                    value: 1\n                }, {\n                    text: \"Não\",\n                    value: 2\n                }\n            ],\n            priorKnowledgeName: \"\",\n            priorLevel: \"\",\n            priorLevelItems: [\n                {\n                    text: \"Obrigatório\",\n                    value: 1\n                }, {\n                    text: \"Desejável\",\n                    value: 2\n                }\n            ]\n        }),\n        watch: {\n            dialog: function () {\n                this.getConceito();\n            },\n            module: function () {\n                this.getConceito();\n            }\n        },\n        mounted: function () {\n            this.getConceito();\n            this\n                .$refs\n                .form\n                .resetValidation();\n        },\n        methods: {\n            getConceito() {\n                var vm = this;\n                this.$nextTick(function () {\n                    vm.conceptName = vm.concept.nameconcept;\n                });\n                this.targetconcepts = [];\n                if (this.module.concepts) {\n                    this.conceptName = this.concept.nameconcept;\n                    this\n                        .module\n                        .concepts\n                        .forEach(element => {\n                            this\n                                .targetconcepts\n                                .push({text: element.nameconcept, value: element});\n                        });\n                }\n                if (this.concept !== \"\") {\n                    if (this.concept.priorknowledge.length > 0) {\n                        vm.priorKnowledge = 1;\n                        vm.priorKnowledgeName = this\n                            .concept\n                            .priorknowledge[0]\n                            .namepriorknowledge;\n                        vm.priorLevel = parseInt(\n                            this.concept.priorknowledge[0].priorlevel.split(\"/\")[4]\n                        );\n                    } else {\n                        vm.priorKnowledge = 2;\n                    }\n                    var i = 0;\n                    this\n                        .concept\n                        .sourceconcept\n                        .forEach(element => {\n                            var conceptSelect = this\n                                .targetconcepts\n                                .find(function (conceito) {\n                                    return conceito.value.url === element.sourceconcept;\n                                });\n                            var auxConceptTarget = this\n                                .targetconcepts\n                                .find(function (conceito) {\n                                    return (\n                                        conceito.value.url === conceptSelect.value.sourceconcept[i].targetconcept\n                                    );\n                                });\n                            var type = \"\";\n                            if (element.fk_referencetype.split(\"/\")[4] == \"1\") {\n                                type = \"typeOf\";\n                            } else {\n                                type = \"partOf\";\n                            }\n                            this\n                                .relationForControl\n                                .push(\n                                    {conceptSelect: auxConceptTarget, relacaoName: element.namereference, relacaoType: type, url: element.url}\n                                );\n                            i++;\n                        });\n                } else {\n                    vm.priorKnowledge = 2;\n                }\n            },\n            async altera_Cria_Conceito() {\n                var vm = this;\n                if (this.concept === \"\") {\n                    await axios\n                        .post(`http://localhost:8000/concept/`, {\n                            nameconcept: this.conceptName,\n                            fk_idknowledgedomain: this.domain.url,\n                            fk_idmodule: this.module.url\n                        }, {\n                            auth: {\n                                username: \"admin\",\n                                password: \"admin\"\n                            }\n                        })\n                        .then(async function (resposta) {\n                            vm.auxConceito = resposta.data.url;\n                            if (vm.priorKnowledge === 1) {\n                                await axios.post(`http://localhost:8000/priorknowledge/`, {\n                                    namepriorknowledge: vm.priorKnowledgeName,\n                                    priorlevel: `http://localhost:8000/priorlevel/` + vm.priorLevel + `/`,\n                                    fk_idconcept: resposta.data.url\n                                }, {\n                                    auth: {\n                                        username: \"admin\",\n                                        password: \"admin\"\n                                    }\n                                });\n                            }\n                        });\n                } else {\n                    await axios\n                        .put(\n                            \"http://127.0.0.1:8000/concept/\" + this.concept.idconcept + \"/\",\n                            {\n                                nameconcept: this.conceptName,\n                                fk_idknowledgedomain: this.domain.url,\n                                fk_idmodule: this.module.url\n                            },\n                            {\n                                auth: {\n                                    username: \"admin\",\n                                    password: \"admin\"\n                                }\n                            }\n                        )\n                        .then(async function (resposta) {\n                            if (vm.concept.priorknowledge.length > 0 && vm.priorKnowledge === 1) {\n                                await axios.put(vm.concept.priorknowledge[0].url, {\n                                    namepriorknowledge: vm.priorKnowledgeName,\n                                    priorlevel: `http://localhost:8000/priorlevel/` + vm.priorLevel + `/`,\n                                    fk_idconcept: resposta.data.url\n                                }, {\n                                    auth: {\n                                        username: \"admin\",\n                                        password: \"admin\"\n                                    }\n                                });\n                            } else if (vm.concept.priorknowledge.length > 0 && vm.priorKnowledge === 2) {\n                                axios.delete(vm.concept.priorknowledge[0].url, {\n                                    auth: {\n                                        username: \"admin\",\n                                        password: \"admin\"\n                                    }\n                                });\n                            } else if (vm.concept.priorknowledge.length === 0 && vm.priorKnowledge === 1) {\n                                await axios.post(`http://localhost:8000/priorknowledge/`, {\n                                    namepriorknowledge: vm.priorKnowledgeName,\n                                    priorlevel: `http://localhost:8000/priorlevel/` + vm.priorLevel + `/`,\n                                    fk_idconcept: vm.concept.url\n                                }, {\n                                    auth: {\n                                        username: \"admin\",\n                                        password: \"admin\"\n                                    }\n                                });\n                            }\n                        });\n                }\n            },\n            async altera_Cria_Relacoes() {\n                this\n                    .relationForControl\n                    .forEach(async element => {\n                        if (element.url === null) {\n                            var auxReferencia = 0;\n                            if (element.relacaoType == \"typeOf\") {\n                                auxReferencia = 1;\n                            } else if (element.relacaoType == \"partOf\") {\n                                auxReferencia = 2;\n                            }\n                            await axios.post(`http://localhost:8000/reference/`, {\n                                namereference: element.relacaoName,\n                                sourceconcept: this.auxConceito,\n                                targetconcept: element.conceptSelect.url,\n                                fk_referencetype: `http://localhost:8000/referencetype/` + auxReferencia + \"/\"\n                            }, {\n                                auth: {\n                                    username: \"admin\",\n                                    password: \"admin\"\n                                }\n                            });\n                        } else {\n                            auxReferencia = 0;\n                            if (element.relacaoType == \"typeOf\") {\n                                auxReferencia = 1;\n                            } else if (element.relacaoType == \"partOf\") {\n                                auxReferencia = 2;\n                            }\n                            await axios.put(element.url, {\n                                namereference: element.relacaoName,\n                                sourceconcept: this.auxConceito,\n                                targetconcept: element.conceptSelect.value.url,\n                                fk_referencetype: `http://localhost:8000/referencetype/` + auxReferencia + \"/\"\n                            }, {\n                                auth: {\n                                    username: \"admin\",\n                                    password: \"admin\"\n                                }\n                            });\n                        }\n                    });\n            },\n            async validate() {\n                if (this.$refs.form.validate()) {\n                    //await this.$refs.form.validate();\n                    await this.altera_Cria_Conceito();\n                    await this.altera_Cria_Relacoes();\n                    //await this.$refs.form.reset();\n                    this.relationForControl = [];\n                    this.resetVariables();\n                    this.$emit(\"close_or_save\", \"save\");\n                }\n            },\n            reset() {\n                this\n                    .$refs\n                    .form\n                    .reset();\n                this.relationForControl = [];\n                this.resetVariables();\n                this.$emit(\"close_or_save\", \"close\");\n            },\n            resetValidation() {\n                this\n                    .$refs\n                    .form\n                    .resetValidation();\n            },\n            addRelacao() {\n                this\n                    .relationForControl\n                    .push({conceptSelect: null, relacaoName: null, relacaoType: null, url: null});\n            },\n            deletaRelacao(idRelacao) {\n                if (this.relationForControl[idRelacao].url !== null) {\n                    axios.delete(this.relationForControl[idRelacao].url, {\n                        auth: {\n                            username: \"admin\",\n                            password: \"admin\"\n                        }\n                    });\n                }\n                if (idRelacao == 0) {\n                    this\n                        .relationForControl\n                        .shift();\n                } else {\n                    this\n                        .relationForControl\n                        .splice(idRelacao, 1);\n                }\n            },\n            resetVariables() {\n                this.priorLevel = \"\";\n                this.priorKnowledge = 2;\n                this.priorKnowledgeName = \"\";\n            }\n        }\n    };\n</script>"]}]}