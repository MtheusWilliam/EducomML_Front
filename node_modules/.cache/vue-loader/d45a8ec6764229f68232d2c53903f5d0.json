{"remainingRequest":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\www\\EducomML\\EducomML_Front\\src\\components\\Panels.vue?vue&type=template&id=3a6ccd9f&","dependencies":[{"path":"C:\\www\\EducomML\\EducomML_Front\\src\\components\\Panels.vue","mtime":1591488196874},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}