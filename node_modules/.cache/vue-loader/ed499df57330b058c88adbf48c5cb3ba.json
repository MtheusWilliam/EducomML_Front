{"remainingRequest":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-audio\\src\\vuetifyaudio.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-audio\\src\\vuetifyaudio.vue","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGZvcm1hdFRpbWUgPSBzZWNvbmQgPT4gbmV3IERhdGUoc2Vjb25kICogMTAwMCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMTEsIDgpOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ3Z1ZXRpZnktYXVkaW8nLAogICAgcHJvcHM6IHsKICAgICAgICBmaWxlOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogbnVsbAogICAgICAgIH0sCiAgICAgICAgYXV0b1BsYXk6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9LAogICAgICAgIGVuZGVkOiB7CiAgICAgICAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiB7fSwKICAgICAgICB9LAogICAgICAgIGNhblBsYXk6IHsKICAgICAgICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+IHt9LAogICAgICAgIH0sCiAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiBudWxsCiAgICAgICAgfSwKICAgICAgICBkb3dubG9hZGFibGU6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBkdXJhdGlvbjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5hdWRpbyA/IGZvcm1hdFRpbWUodGhpcy50b3RhbER1cmF0aW9uKSA6ICcnCiAgICAgICAgfSwKICAgIH0sCiAgICBkYXRhICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBmaXJzdFBsYXk6IHRydWUsCiAgICAgICAgICAgIGlzTXV0ZWQ6IGZhbHNlLAogICAgICAgICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICAgICAgICBwbGF5aW5nOiBmYWxzZSwKICAgICAgICAgICAgcGF1c2VkOiBmYWxzZSwKICAgICAgICAgICAgcGVyY2VudGFnZTogMCwKICAgICAgICAgICAgY3VycmVudFRpbWU6ICcwMDowMDowMCcsCiAgICAgICAgICAgIGF1ZGlvOiB1bmRlZmluZWQsCiAgICAgICAgICAgIHRvdGFsRHVyYXRpb246IDAsCiAgICAgICAgfQogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgc2V0UG9zaXRpb24gKCkgewogICAgICAgICAgICB0aGlzLmF1ZGlvLmN1cnJlbnRUaW1lID0gcGFyc2VJbnQodGhpcy5hdWRpby5kdXJhdGlvbiAvIDEwMCAqIHRoaXMucGVyY2VudGFnZSk7CiAgICAgICAgfSwKICAgICAgICBzdG9wICgpIHsKICAgICAgICAgICAgdGhpcy5hdWRpby5wYXVzZSgpCiAgICAgICAgICAgIHRoaXMucGF1c2VkID0gdHJ1ZQogICAgICAgICAgICB0aGlzLnBsYXlpbmcgPSBmYWxzZQogICAgICAgICAgICB0aGlzLmF1ZGlvLmN1cnJlbnRUaW1lID0gMAogICAgICAgIH0sCiAgICAgICAgcGxheSAoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnBsYXlpbmcpIHJldHVybgogICAgICAgICAgICB0aGlzLmF1ZGlvLnBsYXkoKS50aGVuKF8gPT4gdGhpcy5wbGF5aW5nID0gdHJ1ZSkKICAgICAgICAgICAgdGhpcy5wYXVzZWQgPSBmYWxzZQogICAgICAgIH0sCiAgICAgICAgcGF1c2UgKCkgewogICAgICAgICAgICB0aGlzLnBhdXNlZCA9ICF0aGlzLnBhdXNlZDsKICAgICAgICAgICAgKHRoaXMucGF1c2VkKSA/IHRoaXMuYXVkaW8ucGF1c2UoKSA6IHRoaXMuYXVkaW8ucGxheSgpCiAgICAgICAgfSwKICAgICAgICBkb3dubG9hZCAoKSB7CiAgICAgICAgICAgIHRoaXMuYXVkaW8ucGF1c2UoKQogICAgICAgICAgICB3aW5kb3cub3Blbih0aGlzLmZpbGUsICdkb3dubG9hZCcpCiAgICAgICAgfSwKICAgICAgICBtdXRlICgpIHsKICAgICAgICAgICAgdGhpcy5pc011dGVkID0gIXRoaXMuaXNNdXRlZAogICAgICAgICAgICB0aGlzLmF1ZGlvLm11dGVkID0gdGhpcy5pc011dGVkCiAgICAgICAgICAgIHRoaXMudm9sdW1lVmFsdWUgPSB0aGlzLmlzTXV0ZWQgPyAwIDogNzUKICAgICAgICB9LAogICAgICAgIHJlbG9hZCAoKSB7CiAgICAgICAgICAgIHRoaXMuYXVkaW8ubG9hZCgpOwogICAgICAgIH0sCiAgICAgICAgX2hhbmRsZUxvYWRlZDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAodGhpcy5hdWRpby5yZWFkeVN0YXRlID49IDIpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvLmR1cmF0aW9uID09PSBJbmZpbml0eSkgewogICAgICAgICAgICAgICAgICAgIC8vIEZpeCBkdXJhdGlvbiBmb3Igc3RyZWFtZWQgYXVkaW8gc291cmNlIG9yIGJsb2IgYmFzZWQKICAgICAgICAgICAgICAgICAgICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zODQ0MzA4NC9ob3ctY2FuLWktYWRkLXByZWRlZmluZWQtbGVuZ3RoLXRvLWF1ZGlvLXJlY29yZGVkLWZyb20tbWVkaWFyZWNvcmRlci1pbi1jaHJvbWUvMzk5NzExNzUjMzk5NzExNzUKICAgICAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvLmN1cnJlbnRUaW1lID0gMWUxMDE7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5hdWRpby5vbnRpbWV1cGRhdGUgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYXVkaW8ub250aW1ldXBkYXRlID0gKCkgPT4ge30KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hdWRpby5jdXJyZW50VGltZSA9IDAKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b3RhbER1cmF0aW9uID0gcGFyc2VJbnQodGhpcy5hdWRpby5kdXJhdGlvbikKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy50b3RhbER1cmF0aW9uID0gcGFyc2VJbnQodGhpcy5hdWRpby5kdXJhdGlvbikKICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWUKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAodGhpcy5hdXRvUGxheSkgdGhpcy5hdWRpby5wbGF5KCkKCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBsb2FkIHNvdW5kIGZpbGUnKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBfaGFuZGxlUGxheWluZ1VJOiBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICB0aGlzLnBlcmNlbnRhZ2UgPSB0aGlzLmF1ZGlvLmN1cnJlbnRUaW1lIC8gdGhpcy5hdWRpby5kdXJhdGlvbiAqIDEwMAogICAgICAgICAgICB0aGlzLmN1cnJlbnRUaW1lID0gZm9ybWF0VGltZSh0aGlzLmF1ZGlvLmN1cnJlbnRUaW1lKQogICAgICAgICAgICB0aGlzLnBsYXlpbmcgPSB0cnVlCiAgICAgICAgfSwKICAgICAgICBfaGFuZGxlUGxheVBhdXNlOiBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBpZiAoZS50eXBlID09PSAncGxheScgJiYgdGhpcy5maXJzdFBsYXkpIHsKICAgICAgICAgICAgICAgIC8vIGluIHNvbWUgc2l0dWF0aW9ucywgYXVkaW8uY3VycmVudFRpbWUgaXMgdGhlIGVuZCBvbmUgb24gY2hyb21lCiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvLmN1cnJlbnRUaW1lID0gMDsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmZpcnN0UGxheSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyc3RQbGF5ID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gJ3BhdXNlJyAmJiB0aGlzLnBhdXNlZCA9PT0gZmFsc2UgJiYgdGhpcy5wbGF5aW5nID09PSBmYWxzZSkgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50VGltZSA9ICcwMDowMDowMCcKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgX2hhbmRsZUVuZGVkICgpIHsKICAgICAgICAgICAgdGhpcy5wYXVzZWQgPSB0aGlzLnBsYXlpbmcgPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5hdWRpby5hZGRFdmVudExpc3RlbmVyKCd0aW1ldXBkYXRlJywgdGhpcy5faGFuZGxlUGxheWluZ1VJKTsKICAgICAgICAgICAgdGhpcy5hdWRpby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRkYXRhJywgdGhpcy5faGFuZGxlTG9hZGVkKTsKICAgICAgICAgICAgdGhpcy5hdWRpby5hZGRFdmVudExpc3RlbmVyKCdwYXVzZScsIHRoaXMuX2hhbmRsZVBsYXlQYXVzZSk7CiAgICAgICAgICAgIHRoaXMuYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcigncGxheScsIHRoaXMuX2hhbmRsZVBsYXlQYXVzZSk7CiAgICAgICAgICAgIHRoaXMuYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignZW5kZWQnLCB0aGlzLl9oYW5kbGVFbmRlZCk7CiAgICAgICAgfSwKICAgIH0sCiAgICBtb3VudGVkICgpIHsKICAgICAgICB0aGlzLmF1ZGlvID0gdGhpcy4kcmVmcy5wbGF5ZXI7CiAgICAgICAgdGhpcy5pbml0KCk7CiAgICB9LAogICAgYmVmb3JlRGVzdHJveSAoKSB7CiAgICAgICAgdGhpcy5hdWRpby5yZW1vdmVFdmVudExpc3RlbmVyKCd0aW1ldXBkYXRlJywgdGhpcy5faGFuZGxlUGxheWluZ1VJKQogICAgICAgIHRoaXMuYXVkaW8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZGVkZGF0YScsIHRoaXMuX2hhbmRsZUxvYWRlZCkKICAgICAgICB0aGlzLmF1ZGlvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BhdXNlJywgdGhpcy5faGFuZGxlUGxheVBhdXNlKQogICAgICAgIHRoaXMuYXVkaW8ucmVtb3ZlRXZlbnRMaXN0ZW5lcigncGxheScsIHRoaXMuX2hhbmRsZVBsYXlQYXVzZSkKICAgICAgICB0aGlzLmF1ZGlvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2VuZGVkJywgdGhpcy5faGFuZGxlRW5kZWQpOwogICAgfQoKfQo="},{"version":3,"sources":["vuetifyaudio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"vuetifyaudio.vue","sourceRoot":"node_modules/vuetify-audio/src","sourcesContent":["<template>\r\n    <v-card style=\"text-align: center\">\r\n        <v-card-text>\r\n            <v-btn outlined icon class=\"ma-2\" :color=\"color\" @click.native=\"playing ? pause() : play()\" :disabled=\"!loaded\">\r\n                <v-icon v-if=\"!playing || paused\">mdi-play</v-icon>\r\n                <v-icon v-else>mdi-pause</v-icon>\r\n            </v-btn>\r\n            <v-btn outlined icon class=\"ma-2\" :color=\"color\" @click.native=\"stop()\" :disabled=\"!loaded\">\r\n                <v-icon>mdi-stop</v-icon>\r\n            </v-btn>\r\n            <v-btn outlined icon class=\"ma-2\" :color=\"color\" @click.native=\"mute()\" :disabled=\"!loaded\">\r\n                <v-icon v-if=\"!isMuted\">mdi-volume-high</v-icon>\r\n                <v-icon v-else>mdi-volume-mute</v-icon>\r\n            </v-btn>\r\n            <v-btn outlined icon class=\"ma-2\" :color=\"color\" @click.native=\"loaded ? download() : reload()\" v-if=\"!loaded\">\r\n                <v-icon>mdi-refresh</v-icon>\r\n            </v-btn>\r\n            <v-btn outlined icon class=\"ma-2\" :color=\"color\" @click.native=\"loaded ? download() : reload()\" v-if=\"loaded && downloadable\">\r\n                <v-icon>mdi-download</v-icon>\r\n            </v-btn>\r\n            <v-progress-linear v-model=\"percentage\" height=\"5\" style=\"margin-top: 15px; margin-bottom: 15px;\" @click.native=\"setPosition()\" :disabled=\"!loaded\"></v-progress-linear>\r\n            <p>{{ currentTime }} / {{ duration }}</p>\r\n        </v-card-text>\r\n        <audio id=\"player\" ref=\"player\" v-on:ended=\"ended\" v-on:canplay=\"canPlay\" :src=\"file\"></audio>\r\n    </v-card>\r\n</template>\r\n<script>\r\n    const formatTime = second => new Date(second * 1000).toISOString().substr(11, 8);\r\n\r\n    export default {\r\n        name: 'vuetify-audio',\r\n        props: {\r\n            file: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            autoPlay: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            ended: {\r\n                type: Function,\r\n                default: () => {},\r\n            },\r\n            canPlay: {\r\n                type: Function,\r\n                default: () => {},\r\n            },\r\n            color: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            downloadable: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        computed: {\r\n            duration: function () {\r\n                return this.audio ? formatTime(this.totalDuration) : ''\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                firstPlay: true,\r\n                isMuted: false,\r\n                loaded: false,\r\n                playing: false,\r\n                paused: false,\r\n                percentage: 0,\r\n                currentTime: '00:00:00',\r\n                audio: undefined,\r\n                totalDuration: 0,\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            setPosition () {\r\n                this.audio.currentTime = parseInt(this.audio.duration / 100 * this.percentage);\r\n            },\r\n            stop () {\r\n                this.audio.pause()\r\n                this.paused = true\r\n                this.playing = false\r\n                this.audio.currentTime = 0\r\n            },\r\n            play () {\r\n                if (this.playing) return\r\n                this.audio.play().then(_ => this.playing = true)\r\n                this.paused = false\r\n            },\r\n            pause () {\r\n                this.paused = !this.paused;\r\n                (this.paused) ? this.audio.pause() : this.audio.play()\r\n            },\r\n            download () {\r\n                this.audio.pause()\r\n                window.open(this.file, 'download')\r\n            },\r\n            mute () {\r\n                this.isMuted = !this.isMuted\r\n                this.audio.muted = this.isMuted\r\n                this.volumeValue = this.isMuted ? 0 : 75\r\n            },\r\n            reload () {\r\n                this.audio.load();\r\n            },\r\n            _handleLoaded: function () {\r\n                if (this.audio.readyState >= 2) {\r\n                    if (this.audio.duration === Infinity) {\r\n                        // Fix duration for streamed audio source or blob based\r\n                        // https://stackoverflow.com/questions/38443084/how-can-i-add-predefined-length-to-audio-recorded-from-mediarecorder-in-chrome/39971175#39971175\r\n                        this.audio.currentTime = 1e101;\r\n                        this.audio.ontimeupdate = () => {\r\n                            this.audio.ontimeupdate = () => {}\r\n                            this.audio.currentTime = 0\r\n                            this.totalDuration = parseInt(this.audio.duration)\r\n                            this.loaded = true;\r\n                        }\r\n                    } else {\r\n                        this.totalDuration = parseInt(this.audio.duration)\r\n                        this.loaded = true\r\n                    }\r\n\r\n                    if (this.autoPlay) this.audio.play()\r\n\r\n                } else {\r\n                    throw new Error('Failed to load sound file')\r\n                }\r\n            },\r\n            _handlePlayingUI: function (e) {\r\n                this.percentage = this.audio.currentTime / this.audio.duration * 100\r\n                this.currentTime = formatTime(this.audio.currentTime)\r\n                this.playing = true\r\n            },\r\n            _handlePlayPause: function (e) {\r\n                if (e.type === 'play' && this.firstPlay) {\r\n                    // in some situations, audio.currentTime is the end one on chrome\r\n                    this.audio.currentTime = 0;\r\n                    if (this.firstPlay) {\r\n                        this.firstPlay = false;\r\n                    }\r\n                }\r\n                if (e.type === 'pause' && this.paused === false && this.playing === false) {\r\n                    this.currentTime = '00:00:00'\r\n                }\r\n            },\r\n            _handleEnded () {\r\n                this.paused = this.playing = false;\r\n            },\r\n            init: function () {\r\n                this.audio.addEventListener('timeupdate', this._handlePlayingUI);\r\n                this.audio.addEventListener('loadeddata', this._handleLoaded);\r\n                this.audio.addEventListener('pause', this._handlePlayPause);\r\n                this.audio.addEventListener('play', this._handlePlayPause);\r\n                this.audio.addEventListener('ended', this._handleEnded);\r\n            },\r\n        },\r\n        mounted () {\r\n            this.audio = this.$refs.player;\r\n            this.init();\r\n        },\r\n        beforeDestroy () {\r\n            this.audio.removeEventListener('timeupdate', this._handlePlayingUI)\r\n            this.audio.removeEventListener('loadeddata', this._handleLoaded)\r\n            this.audio.removeEventListener('pause', this._handlePlayPause)\r\n            this.audio.removeEventListener('play', this._handlePlayPause)\r\n            this.audio.removeEventListener('ended', this._handleEnded);\r\n        }\r\n\r\n    }\r\n</script>\r\n"]}]}