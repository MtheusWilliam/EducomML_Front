{"remainingRequest":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\www\\EducomML\\EducomML_Front\\src\\components\\instructional_model\\AtividadeColaborativaDialog.vue?vue&type=template&id=13546ac0&","dependencies":[{"path":"C:\\www\\EducomML\\EducomML_Front\\src\\components\\instructional_model\\AtividadeColaborativaDialog.vue","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1597353521000},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1597353521000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}