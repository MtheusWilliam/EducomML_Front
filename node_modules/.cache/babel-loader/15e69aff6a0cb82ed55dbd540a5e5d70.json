{"remainingRequest":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js!C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\www\\EducomML\\EducomML_Front\\src\\components\\didatic_model\\VisibleDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\www\\EducomML\\EducomML_Front\\src\\components\\didatic_model\\VisibleDialog.vue","mtime":1596743861328},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593634551412},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js","mtime":1593634550126},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1593634595918},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593634551412},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1593634595223}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VisibleDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-card>\r\n    <v-card-title style=\"background-color:purple; color:white;\">\r\n      <span class=\"headline\">\r\n        <p>Defina as informações equivalentes ao modelo didático.</p>\r\n      </span>\r\n    </v-card-title>\r\n    <v-row style=\"width : 100%\">\r\n      <v-col cols=\"12\">\r\n        <v-card-text>\r\n          <v-row class=\"ml-2\">\r\n            <v-btn\r\n              color=\"warning\"\r\n              height=\"40px\"\r\n              dark\r\n              x-small\r\n              small\r\n              @click=\"deselectAll()\"\r\n              >Deselecionar tudo</v-btn\r\n            >\r\n            <v-btn\r\n              class=\"ml-1\"\r\n              color=\"primary\"\r\n              height=\"40\"\r\n              dark\r\n              small\r\n              @click=\"selectAll()\"\r\n              >Selecionar tudo</v-btn\r\n            >\r\n            <v-btn\r\n              class=\"ml-1\"\r\n              color=\"#A5A5A5\"\r\n              height=\"40px\"\r\n              dark\r\n              small\r\n              @click=\"openDidaticDialog('assessment')\"\r\n              >Parâmetros de avaliação</v-btn\r\n            >\r\n            <v-btn\r\n              class=\"ml-1\"\r\n              color=\"green\"\r\n              height=\"40\"\r\n              dark\r\n              small\r\n              @click=\"openDidaticDialog('prior')\"\r\n              >Conhecimentos Prévios</v-btn\r\n            >\r\n          </v-row>\r\n\r\n          <v-treeview\r\n            @update:active=\"test\"\r\n            v-model=\"selection\"\r\n            :selection-type=\"'independent'\"\r\n            :items=\"treeData\"\r\n            return-object\r\n            selectable\r\n            selected-color=\"success\"\r\n            open-all\r\n          ></v-treeview>\r\n        </v-card-text>\r\n      </v-col>\r\n    </v-row>\r\n    <v-card-actions>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"red\" height=\"49\" dark large @click=\"reset\">\r\n        Cancelar\r\n        <v-icon dark right>mdi-close</v-icon>\r\n      </v-btn>\r\n      <v-btn color=\"success\" height=\"49\" dark large @click=\"validate\">\r\n        Salvar\r\n        <v-icon dark right>mdi-content-save</v-icon>\r\n      </v-btn>\r\n    </v-card-actions>\r\n    <div class=\"text-center\">\r\n      <v-dialog v-model=\"dialogError\" width=\"500\">\r\n        <v-card>\r\n          <v-card-title class=\"headline red\" primary-title style=\"color:white;\"\r\n            >ALERTA!</v-card-title\r\n          >\r\n          <v-card-text class=\"mt-3\" style=\"font-size: 1.3em;\">{{\r\n            messageError\r\n          }}</v-card-text>\r\n          <v-divider></v-divider>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"primary\" text @click=\"dialogError = false\">Ok</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n    </div>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n  import Api from \"@/services/Api\";\r\n\r\n  export default {\r\n    name: \"VisibleDialog\",\r\n    props: [\"domain\", \"dialog\"],\r\n    data: () => ({\r\n      valid: true,\r\n      treeData: [],\r\n      selection: [],\r\n      elementData: [],\r\n      scopoTypes: [\r\n        {\r\n          text: \"Avaliação\",\r\n          value: 1,\r\n        },\r\n        {\r\n          text: \"Domínio\",\r\n          value: 2,\r\n        },\r\n      ],\r\n      typesThreshold: [\r\n        {\r\n          text: \"Porcentagem\",\r\n          value: 1,\r\n        },\r\n        {\r\n          text: \"Literal\",\r\n          value: 2,\r\n        },\r\n      ],\r\n      valueTypes: [\"Single\", \"Range\"],\r\n      assessmentControl: [],\r\n      conceptsPrior: [],\r\n      priorControl: [],\r\n      priorLevels: [\r\n        {\r\n          text: \"Obrigatório\",\r\n          value: 1,\r\n        },\r\n        {\r\n          text: \"Desejável\",\r\n          value: 2,\r\n        },\r\n      ],\r\n      dialogError: false,\r\n      messageError: \"\",\r\n      newItems: [],\r\n      checkbox: true,\r\n    }),\r\n    watch: {\r\n      domain: async function() {\r\n        this.assessmentControl = [];\r\n        this.priorControl = [];\r\n        if (this.domain) {\r\n          this.treeData = [];\r\n          this.selection = [];\r\n          await this.getAssessments();\r\n          await this.setDomainVariables();\r\n        }\r\n      },\r\n      assessmentControl: function() {\r\n        this.assessmentControl.forEach((assess) => {\r\n          if (assess.valueType === \"Single\") {\r\n            assess.ranges.forEach((range) => {\r\n              if (range.url) {\r\n                this.deletaSingle(range.url);\r\n              }\r\n            });\r\n            assess.ranges = [];\r\n          } else if (assess.valueType === \"Range\") {\r\n            if (assess.single.url) {\r\n              this.deletaSingle(assess.single.url);\r\n              assess.single.url = \"\";\r\n            }\r\n            assess.single.threshold = \"\";\r\n          }\r\n        });\r\n      },\r\n    },\r\n    mounted: async function() {\r\n      this.assessmentControl = [];\r\n      this.priorControl = [];\r\n      if (this.domain) {\r\n        this.treeData = [];\r\n        this.selection = [];\r\n        await this.getAssessments();\r\n        await this.setDomainVariables();\r\n      }\r\n    },\r\n    methods: {\r\n      getAssessments() {\r\n        // var vm = this;\r\n        if (this.domain) {\r\n          if (this.domain.assessmentparameter.length > 0) {\r\n            var assess = {\r\n              typeThreshold: parseInt(\r\n                this.domain.assessmentparameter[0].typethreshold.split(\"/\")[4]\r\n              ),\r\n              scopo: parseInt(\r\n                this.domain.assessmentparameter[0].scopo.split(\"/\")[4]\r\n              ),\r\n              fk_element: this.domain.assessmentparameter[0]\r\n                .fk_idknowledgedomain,\r\n              valueType: \"\",\r\n              single: {\r\n                threshold: \"\",\r\n                url: \"\",\r\n              },\r\n              ranges: [],\r\n              url: this.domain.assessmentparameter[0].url,\r\n            };\r\n            if (this.domain.assessmentparameter[0].single.length > 0) {\r\n              assess.valueType = \"Single\";\r\n              assess.single.threshold = this.domain.assessmentparameter[0].single[0].threshold;\r\n              assess.single.url = this.domain.assessmentparameter[0].single[0].url;\r\n            } else if (this.domain.assessmentparameter[0].ranges.length > 0) {\r\n              assess.valueType = \"Range\";\r\n              this.domain.assessmentparameter[0].ranges.forEach((range) => {\r\n                assess.ranges.push({\r\n                  namerange: range.namerange,\r\n                  initialvalue: range.initialvalue,\r\n                  limitvalue: range.limitvalue,\r\n                  url: range.url,\r\n                });\r\n              });\r\n            }\r\n            this.assessmentControl.push(assess);\r\n          }\r\n          if (this.domain.modules) {\r\n            this.domain.modules.forEach((module) => {\r\n              if (module.assessmentparameter.length > 0) {\r\n                var assess = {\r\n                  typeThreshold: parseInt(\r\n                    module.assessmentparameter[0].typethreshold.split(\"/\")[4]\r\n                  ),\r\n                  scopo: parseInt(\r\n                    module.assessmentparameter[0].scopo.split(\"/\")[4]\r\n                  ),\r\n                  fk_element: module.url,\r\n                  valueType: \"\",\r\n                  single: {\r\n                    threshold: \"\",\r\n                    url: \"\",\r\n                  },\r\n                  ranges: [],\r\n                  url: module.assessmentparameter[0].url,\r\n                };\r\n                if (module.assessmentparameter[0].single.length > 0) {\r\n                  assess.valueType = \"Single\";\r\n                  assess.single.threshold =\r\n                    module.assessmentparameter[0].single[0].threshold;\r\n                  assess.single.url =\r\n                    module.assessmentparameter[0].single[0].url;\r\n                } else if (module.assessmentparameter[0].ranges.length > 0) {\r\n                  assess.valueType = \"Range\";\r\n                  module.assessmentparameter[0].ranges.forEach((range) => {\r\n                    assess.ranges.push({\r\n                      namerange: range.namerange,\r\n                      initialvalue: range.initialvalue,\r\n                      limitvalue: range.limitvalue,\r\n                      url: range.url,\r\n                    });\r\n                  });\r\n                }\r\n                this.assessmentControl.push(assess);\r\n              }\r\n              if (module.concepts) {\r\n                module.concepts.forEach((moduleConcept) => {\r\n                  if (moduleConcept.assessmentparameter.length > 0) {\r\n                    var assess = {\r\n                      typeThreshold: parseInt(\r\n                        moduleConcept.assessmentparameter[0].typethreshold.split(\r\n                          \"/\"\r\n                        )[4]\r\n                      ),\r\n                      scopo: parseInt(\r\n                        moduleConcept.assessmentparameter[0].scopo.split(\"/\")[4]\r\n                      ),\r\n                      fk_element: moduleConcept.url,\r\n                      valueType: \"\",\r\n                      single: {\r\n                        threshold: \"\",\r\n                        url: \"\",\r\n                      },\r\n                      ranges: [],\r\n                      url: moduleConcept.assessmentparameter[0].url,\r\n                    };\r\n                    if (\r\n                      moduleConcept.assessmentparameter[0].single.length > 0\r\n                    ) {\r\n                      assess.valueType = \"Single\";\r\n                      assess.single.threshold =\r\n                        moduleConcept.assessmentparameter[0].single[0].threshold;\r\n                      assess.single.url =\r\n                        moduleConcept.assessmentparameter[0].single[0].url;\r\n                    } else if (\r\n                      moduleConcept.assessmentparameter[0].ranges.length > 0\r\n                    ) {\r\n                      assess.valueType = \"Range\";\r\n                      moduleConcept.assessmentparameter[0].ranges.forEach(\r\n                        (range) => {\r\n                          assess.ranges.push({\r\n                            namerange: range.namerange,\r\n                            initialvalue: range.initialvalue,\r\n                            limitvalue: range.limitvalue,\r\n                            url: range.url,\r\n                          });\r\n                        }\r\n                      );\r\n                    }\r\n                    this.assessmentControl.push(assess);\r\n                  }\r\n                  if (moduleConcept.priorknowledge.length > 0) {\r\n                    this.priorControl.push({\r\n                      namepriorknowledge:\r\n                        moduleConcept.priorknowledge[0].namepriorknowledge,\r\n                      priorlevel: parseInt(\r\n                        moduleConcept.priorknowledge[0].priorlevel.split(\"/\")[4]\r\n                      ),\r\n                      fk_idconcept:\r\n                        moduleConcept.priorknowledge[0].fk_idconcept,\r\n                      url: moduleConcept.priorknowledge[0].url,\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n              if (module.submodules) {\r\n                module.submodules.forEach((submodule) => {\r\n                  if (submodule.assessmentparameter.length > 0) {\r\n                    var assess = {\r\n                      typeThreshold: parseInt(\r\n                        submodule.assessmentparameter[0].typethreshold.split(\r\n                          \"/\"\r\n                        )[4]\r\n                      ),\r\n                      scopo: parseInt(\r\n                        submodule.assessmentparameter[0].scopo.split(\"/\")[4]\r\n                      ),\r\n                      fk_element: submodule.url,\r\n                      valueType: \"\",\r\n                      single: {\r\n                        threshold: \"\",\r\n                        url: \"\",\r\n                      },\r\n                      ranges: [],\r\n                      url: submodule.assessmentparameter[0].url,\r\n                    };\r\n                    if (submodule.assessmentparameter[0].single.length > 0) {\r\n                      assess.valueType = \"Single\";\r\n                      assess.single.threshold =\r\n                        submodule.assessmentparameter[0].single[0].threshold;\r\n                      assess.single.url =\r\n                        submodule.assessmentparameter[0].single[0].url;\r\n                    } else if (\r\n                      submodule.assessmentparameter[0].ranges.length > 0\r\n                    ) {\r\n                      assess.valueType = \"Range\";\r\n                      submodule.assessmentparameter[0].ranges.forEach(\r\n                        (range) => {\r\n                          assess.ranges.push({\r\n                            namerange: range.namerange,\r\n                            initialvalue: range.initialvalue,\r\n                            limitvalue: range.limitvalue,\r\n                            url: range.url,\r\n                          });\r\n                        }\r\n                      );\r\n                    }\r\n                    this.assessmentControl.push(assess);\r\n                  }\r\n                  if (submodule.concepts) {\r\n                    submodule.concepts.forEach((submoduleConcept) => {\r\n                      if (submoduleConcept.assessmentparameter.length > 0) {\r\n                        var assess = {\r\n                          typeThreshold: parseInt(\r\n                            submoduleConcept.assessmentparameter[0].typethreshold.split(\r\n                              \"/\"\r\n                            )[4]\r\n                          ),\r\n                          scopo: parseInt(\r\n                            submoduleConcept.assessmentparameter[0].scopo.split(\r\n                              \"/\"\r\n                            )[4]\r\n                          ),\r\n                          fk_element: submoduleConcept.url,\r\n                          valueType: \"\",\r\n                          single: {\r\n                            threshold: \"\",\r\n                            url: \"\",\r\n                          },\r\n                          ranges: [],\r\n                          url: submoduleConcept.assessmentparameter[0].url,\r\n                        };\r\n                        if (\r\n                          submoduleConcept.assessmentparameter[0].single\r\n                            .length > 0\r\n                        ) {\r\n                          assess.valueType = \"Single\";\r\n                          assess.single.threshold =\r\n                            submoduleConcept.assessmentparameter[0].single[0].threshold;\r\n                          assess.single.url =\r\n                            submoduleConcept.assessmentparameter[0].single[0].url;\r\n                        } else if (\r\n                          submoduleConcept.assessmentparameter[0].ranges\r\n                            .length > 0\r\n                        ) {\r\n                          assess.valueType = \"Range\";\r\n                          submoduleConcept.assessmentparameter[0].ranges.forEach(\r\n                            (range) => {\r\n                              assess.ranges.push({\r\n                                namerange: range.namerange,\r\n                                initialvalue: range.initialvalue,\r\n                                limitvalue: range.limitvalue,\r\n                                url: range.url,\r\n                              });\r\n                            }\r\n                          );\r\n                        }\r\n                        this.assessmentControl.push(assess);\r\n                      }\r\n                      if (submoduleConcept.priorknowledge.length > 0) {\r\n                        this.priorControl.push({\r\n                          namepriorknowledge:\r\n                            submoduleConcept.priorknowledge[0]\r\n                              .namepriorknowledge,\r\n                          priorlevel: parseInt(\r\n                            submoduleConcept.priorknowledge[0].priorlevel.split(\r\n                              \"/\"\r\n                            )[4]\r\n                          ),\r\n                          fk_idconcept:\r\n                            submoduleConcept.priorknowledge[0].fk_idconcept,\r\n                          url: submoduleConcept.priorknowledge[0].url,\r\n                        });\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      },\r\n      test(value) {\r\n        if (value.length) {\r\n          if (value[0].split(\"/\")[5] === \"sub\") {\r\n            this.$emit(\"type\", { type: \"submodulo\", url: value[0] });\r\n          } else {\r\n            this.$emit(\"type\", { type: value[0].split(\"/\")[3], url: value[0] });\r\n          }\r\n        }\r\n      },\r\n      setDomainVariables() {\r\n        this.treeData = [];\r\n        this.elementData.push({\r\n          text: \"[DOMINIO] \" + this.domain.nameknowledgedomain,\r\n          value: this.domain.url,\r\n        });\r\n        var indexmodulo = 0;\r\n        if (this.domain.mobilemedias.length) {\r\n          this.domain.mobilemedias.forEach((mobilemedia) => {\r\n            var object = {\r\n              id: mobilemedia.url,\r\n              name: \"[MOBILEMEDIA] \" + mobilemedia.label,\r\n              visible: mobilemedia.visible,\r\n            };\r\n            this.treeData.push(object);\r\n            if (object.visible) {\r\n              this.selection.push(object);\r\n            }\r\n            indexmodulo++;\r\n          });\r\n        }\r\n        if (this.domain.instructionalelements.length) {\r\n          this.domain.instructionalelements.forEach((instructionalelement) => {\r\n            if (\r\n              instructionalelement.fk_instructionalelementtype.split(\"/\")[4] !==\r\n              4\r\n            ) {\r\n              var object = {\r\n                id: instructionalelement.url,\r\n                name: \"[INSTRUCTIONAL ELEMENT] \" + instructionalelement.label,\r\n                visible: instructionalelement.visible,\r\n              };\r\n              this.treeData.push(object);\r\n              if (object.visible) {\r\n                this.selection.push(object);\r\n              }\r\n              indexmodulo++;\r\n            }\r\n          });\r\n        }\r\n        if (Array.isArray(this.domain.modules) && this.domain.modules.length) {\r\n          this.domain.modules.forEach((modulo) => {\r\n            if (modulo.fk_idmodule === null) {\r\n              var indexsubmodulo = 0;\r\n              var object = {\r\n                id: modulo.url,\r\n                name: \"[MODULO] \" + modulo.namemodule,\r\n                visible: modulo.visible,\r\n                children: [],\r\n              };\r\n              this.treeData.push(object);\r\n              this.elementData.push({\r\n                text: object.name,\r\n                value: object.id,\r\n              });\r\n              if (object.visible) {\r\n                this.selection.push(object);\r\n              }\r\n              if (modulo.mobilemedias.length) {\r\n                modulo.mobilemedias.forEach((mobilemedia) => {\r\n                  var object = {\r\n                    id: mobilemedia.url,\r\n                    name: \"[MOBILEMEDIA] \" + mobilemedia.label,\r\n                    visible: mobilemedia.visible,\r\n                  };\r\n                  this.treeData[indexmodulo].children.push(object);\r\n                  if (object.visible) {\r\n                    this.selection.push(object);\r\n                  }\r\n                  indexsubmodulo++;\r\n                });\r\n              }\r\n\r\n              if (modulo.instructionalelements.length) {\r\n                modulo.instructionalelements.forEach((instructionalelement) => {\r\n                  if (\r\n                    instructionalelement.fk_instructionalelementtype.split(\r\n                      \"/\"\r\n                    )[4] !== 4\r\n                  ) {\r\n                    var object = {\r\n                      id: instructionalelement.url,\r\n                      name:\r\n                        \"[INSTRUCTIONAL ELEMENT] \" + instructionalelement.label,\r\n                      visible: instructionalelement.visible,\r\n                    };\r\n                    this.treeData[indexmodulo].children.push(object);\r\n                    if (object.visible) {\r\n                      this.selection.push(object);\r\n                    }\r\n                    indexsubmodulo++;\r\n                  }\r\n                });\r\n              }\r\n\r\n              if (modulo.submodules.length) {\r\n                var indexconceito = 0;\r\n                modulo.submodules.forEach((submodulo) => {\r\n                  var object = {\r\n                    id: submodulo.url,\r\n                    name: \"[SUBMODULO] \" + submodulo.namemodule,\r\n                    visible: submodulo.visible,\r\n                    children: [],\r\n                  };\r\n                  this.treeData[indexmodulo].children.push(object);\r\n                  this.elementData.push({\r\n                    text: object.name,\r\n                    value: object.id,\r\n                  });\r\n                  if (object.visible) {\r\n                    this.selection.push(object);\r\n                  }\r\n\r\n                  if (submodulo.mobilemedias.length) {\r\n                    submodulo.mobilemedias.forEach((mobilemedia) => {\r\n                      var object = {\r\n                        id: mobilemedia.url,\r\n                        name: \"[MOBILEMEDIA] \" + mobilemedia.label,\r\n                        visible: mobilemedia.visible,\r\n                      };\r\n                      this.treeData[indexmodulo].children[\r\n                        indexsubmodulo\r\n                      ].children.push(object);\r\n                      if (object.visible) {\r\n                        this.selection.push(object);\r\n                      }\r\n                      indexconceito++;\r\n                    });\r\n                  }\r\n\r\n                  if (submodulo.instructionalelements.length) {\r\n                    submodulo.instructionalelements.forEach(\r\n                      (instructionalelement) => {\r\n                        var object = {\r\n                          id: instructionalelement.url,\r\n                          name:\r\n                            \"[INSTRUCTIONAL ELEMENT] \" +\r\n                            instructionalelement.label,\r\n                          visible: instructionalelement.visible,\r\n                        };\r\n                        this.treeData[indexmodulo].children[\r\n                          indexsubmodulo\r\n                        ].children.push(object);\r\n                        if (object.visible) {\r\n                          this.selection.push(object);\r\n                        }\r\n                        indexconceito++;\r\n                      }\r\n                    );\r\n                  }\r\n\r\n                  if (submodulo.concepts.length) {\r\n                    submodulo.concepts.forEach((conceito) => {\r\n                      var object = {\r\n                        id: conceito.url,\r\n                        name: \"[CONCEITO] \" + conceito.nameconcept,\r\n                        visible: conceito.visible,\r\n                        children: [],\r\n                      };\r\n                      this.treeData[indexmodulo].children[\r\n                        indexsubmodulo\r\n                      ].children.push(object);\r\n\r\n                      this.elementData.push({\r\n                        text: object.name,\r\n                        value: object.id,\r\n                      });\r\n                      if (object.visible) {\r\n                        this.selection.push(object);\r\n                      }\r\n                      this.conceptsPrior.push({\r\n                        text: object.name,\r\n                        value: object.id,\r\n                      });\r\n\r\n                      if (conceito.mobilemedias.length) {\r\n                        conceito.mobilemedias.forEach((mobilemedia) => {\r\n                          var object = {\r\n                            id: mobilemedia.url,\r\n                            name: \"[MOBILEMEDIA] \" + mobilemedia.label,\r\n                            visible: mobilemedia.visible,\r\n                          };\r\n                          this.treeData[indexmodulo].children[\r\n                            indexsubmodulo\r\n                          ].children[indexconceito].children.push(object);\r\n                          if (object.visible) {\r\n                            this.selection.push(object);\r\n                          }\r\n                        });\r\n                      }\r\n\r\n                      if (conceito.instructionalelements.length) {\r\n                        conceito.instructionalelements.forEach(\r\n                          (instructionalelement) => {\r\n                            var object = {\r\n                              id: instructionalelement.url,\r\n                              name:\r\n                                \"[INSTRUCTIONAL ELEMENT] \" +\r\n                                instructionalelement.label,\r\n                              visible: instructionalelement.visible,\r\n                            };\r\n                            this.treeData[indexmodulo].children[\r\n                              indexsubmodulo\r\n                            ].children[indexconceito].children.push(object);\r\n                            if (object.visible) {\r\n                              this.selection.push(object);\r\n                            }\r\n                          }\r\n                        );\r\n                      }\r\n\r\n                      if (conceito.informationitems.length) {\r\n                        conceito.informationitems.forEach((procedure) => {\r\n                          if (\r\n                            procedure.fk_informationitemtype ===\r\n                            \"/informationitemtype/4/\"\r\n                          ) {\r\n                            var object = {\r\n                              id: procedure.url,\r\n                              name:\r\n                                \"[PROCEDIMENTO] \" +\r\n                                procedure.nameinformationitem,\r\n                              visible: procedure.visible,\r\n                            };\r\n                            this.treeData[indexmodulo].children[\r\n                              indexsubmodulo\r\n                            ].children[indexconceito].children.push(object);\r\n                            if (object.visible) {\r\n                              this.selection.push(object);\r\n                            }\r\n                          }\r\n                        });\r\n                      }\r\n\r\n                      indexconceito++;\r\n                    });\r\n                  }\r\n                  indexsubmodulo++;\r\n                });\r\n              }\r\n              if (modulo.concepts.length) {\r\n                if (indexsubmodulo > 0) {\r\n                  indexconceito = indexsubmodulo;\r\n                } else {\r\n                  indexconceito = 0;\r\n                }\r\n                modulo.concepts.forEach((conceito) => {\r\n                  var object = {\r\n                    id: conceito.url,\r\n                    name: \"[CONCEITO] \" + conceito.nameconcept,\r\n                    visible: conceito.visible,\r\n                    children: [],\r\n                  };\r\n                  this.treeData[indexmodulo].children.push(object);\r\n\r\n                  this.elementData.push({\r\n                    text: object.name,\r\n                    value: object.id,\r\n                  });\r\n                  if (object.visible) {\r\n                    this.selection.push(object);\r\n                  }\r\n                  this.conceptsPrior.push({\r\n                    text: object.name,\r\n                    value: object.id,\r\n                  });\r\n                  if (conceito.mobilemedias.length) {\r\n                    conceito.mobilemedias.forEach((mobilemedia) => {\r\n                      var object = {\r\n                        id: mobilemedia.url,\r\n                        name: \"[MOBILEMEDIA] \" + mobilemedia.label,\r\n                        visible: mobilemedia.visible,\r\n                      };\r\n                      this.treeData[indexmodulo].children[\r\n                        indexconceito\r\n                      ].children.push(object);\r\n                      if (object.visible) {\r\n                        this.selection.push(object);\r\n                      }\r\n                    });\r\n                  }\r\n\r\n                  if (conceito.instructionalelements.length) {\r\n                    conceito.instructionalelements.forEach(\r\n                      (instructionalelement) => {\r\n                        var object = {\r\n                          id: instructionalelement.url,\r\n                          name:\r\n                            \"[INSTRUCTIONAL ELEMENT] \" +\r\n                            instructionalelement.label,\r\n                          visible: instructionalelement.visible,\r\n                        };\r\n                        this.treeData[indexmodulo].children[\r\n                          indexconceito\r\n                        ].children.push(object);\r\n                        if (object.visible) {\r\n                          this.selection.push(object);\r\n                        }\r\n                      }\r\n                    );\r\n                  }\r\n\r\n                  if (conceito.informationitems.length) {\r\n                    conceito.informationitems.forEach((procedure) => {\r\n                      if (\r\n                        procedure.fk_informationitemtype ===\r\n                        \"/informationitemtype/4/\"\r\n                      ) {\r\n                        var object = {\r\n                          id: procedure.url,\r\n                          name:\r\n                            \"[PROCEDIMENTO] \" + procedure.nameinformationitem,\r\n                          visible: procedure.visible,\r\n                        };\r\n                        this.treeData[indexmodulo].children[\r\n                          indexconceito\r\n                        ].children.push(object);\r\n                        if (object.visible) {\r\n                          this.selection.push(object);\r\n                        }\r\n                      }\r\n                    });\r\n                  }\r\n                  indexconceito++;\r\n                });\r\n              }\r\n              indexmodulo++;\r\n            }\r\n          });\r\n        }\r\n      },\r\n      async postAssessment() {\r\n        await this.assessmentControl.forEach(async (assessment) => {\r\n          var auxAssessment = {\r\n            typethreshold: `/typethreshold/` + assessment.typeThreshold + `/`,\r\n            scopo: `/scopo/` + assessment.scopo + `/`,\r\n            fk_idknowledgedomain: null,\r\n            fk_idmodule: null,\r\n            fk_idconcept: null,\r\n          };\r\n          if (assessment.fk_element.split(\"/\")[3] === \"knowledgedomain\") {\r\n            auxAssessment.fk_idknowledgedomain = assessment.fk_element;\r\n          } else if (assessment.fk_element.split(\"/\")[3] === \"module\") {\r\n            auxAssessment.fk_idmodule = assessment.fk_element;\r\n          } else if (assessment.fk_element.split(\"/\")[3] === \"concept\") {\r\n            auxAssessment.fk_idconcept = assessment.fk_element;\r\n          }\r\n\r\n          if (assessment.url) {\r\n            await Api()\r\n              .put(assessment.url, auxAssessment)\r\n              .then(async function(resposta) {\r\n                if (assessment.valueType === \"Single\") {\r\n                  if (assessment.ranges) {\r\n                    assessment.ranges.forEach((range) => {\r\n                      if (range.url) {\r\n                        Api().delete(range.url);\r\n                      }\r\n                    });\r\n                  }\r\n                  await Api().put(assessment.single.url, {\r\n                    fk_idassessmentparameter: resposta.data.url,\r\n                    threshold: assessment.single.threshold,\r\n                  });\r\n                } else if (assessment.valueType === \"Range\") {\r\n                  if (assessment.single.url) {\r\n                    Api().delete(assessment.single.url);\r\n                  }\r\n                  assessment.ranges.forEach(async (range) => {\r\n                    if (range.url) {\r\n                      await Api().put(range.url, {\r\n                        namerange: range.namerange,\r\n                        fk_idassessmentparameter: resposta.data.url,\r\n                        initialvalue: range.initialvalue,\r\n                        limitvalue: range.limitvalue,\r\n                      });\r\n                    } else {\r\n                      await Api().post(\"/range/\", {\r\n                        namerange: range.namerange,\r\n                        fk_idassessmentparameter: resposta.data.url,\r\n                        initialvalue: range.initialvalue,\r\n                        limitvalue: range.limitvalue,\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n          } else {\r\n            await Api()\r\n              .post(\"/assessmentparameter/\", auxAssessment)\r\n              .then(async function(resposta) {\r\n                if (assessment.valueType === \"Single\") {\r\n                  await Api().post(\"/single/\", {\r\n                    fk_idassessmentparameter: resposta.data.url,\r\n                    threshold: assessment.single.threshold,\r\n                  });\r\n                } else if (assessment.valueType === \"Range\") {\r\n                  assessment.ranges.forEach(async (range) => {\r\n                    await Api().post(\"/range/\", {\r\n                      namerange: range.namerange,\r\n                      fk_idassessmentparameter: resposta.data.url,\r\n                      initialvalue: range.initialvalue,\r\n                      limitvalue: range.limitvalue,\r\n                    });\r\n                  });\r\n                }\r\n              });\r\n          }\r\n        });\r\n      },\r\n      async postPriorKnowledges() {\r\n        await this.priorControl.forEach(async (prior) => {\r\n          if (prior.url) {\r\n            await Api().put(prior.url, {\r\n              namepriorknowledge: prior.namepriorknowledge,\r\n              priorlevel: `/priorlevel/` + prior.priorlevel + `/`,\r\n              fk_idconcept: prior.fk_idconcept,\r\n            });\r\n          } else {\r\n            await Api().post(`/priorknowledge/`, {\r\n              namepriorknowledge: prior.namepriorknowledge,\r\n              priorlevel: `/priorlevel/` + prior.priorlevel + `/`,\r\n              fk_idconcept: prior.fk_idconcept,\r\n            });\r\n          }\r\n        });\r\n      },\r\n      async putVisible() {\r\n        var vm = this;\r\n\r\n        this.treeData.forEach((element) => {\r\n          if (\r\n            element.visible === true &&\r\n            !this.selection.find((findElement) => findElement.id === element.id)\r\n          ) {\r\n            Api()\r\n              .patch(element.id)\r\n              .then(async function(resposta) {\r\n                var aux = resposta.data;\r\n                await Object.keys(aux).forEach((atributo) => {\r\n                  if (Array.isArray(aux[atributo])) {\r\n                    delete aux[atributo];\r\n                  } else if (atributo === \"url\") {\r\n                    delete aux[atributo];\r\n                  } else if (atributo[0] + atributo[1] === \"id\") {\r\n                    delete aux[atributo];\r\n                  } else if (atributo === \"visible\") {\r\n                    aux.visible = false;\r\n                  }\r\n                });\r\n                await Api().put(element.id, aux);\r\n              });\r\n          } else if (\r\n            element.visible === false &&\r\n            this.selection.find((findElement) => findElement.id === element.id)\r\n          ) {\r\n            Api()\r\n              .patch(element.id)\r\n              .then(async function(resposta) {\r\n                var aux = resposta.data;\r\n                await Object.keys(aux).forEach((atributo) => {\r\n                  if (Array.isArray(aux[atributo])) {\r\n                    delete aux[atributo];\r\n                  } else if (atributo === \"url\") {\r\n                    delete aux[atributo];\r\n                  } else if (atributo[0] + atributo[1] === \"id\") {\r\n                    delete aux[atributo];\r\n                  } else if (atributo === \"visible\") {\r\n                    aux.visible = true;\r\n                  }\r\n                });\r\n                await Api().put(element.id, aux);\r\n              });\r\n          }\r\n          if (Array.isArray(element.children) && element.children.length) {\r\n            element.children.forEach((element2) => {\r\n              if (\r\n                element2.visible === true &&\r\n                !this.selection.find(\r\n                  (findElement2) => findElement2.id === element2.id\r\n                )\r\n              ) {\r\n                Api()\r\n                  .patch(element2.id)\r\n                  .then(async function(resposta) {\r\n                    var aux = resposta.data;\r\n                    await Object.keys(aux).forEach((atributo) => {\r\n                      if (Array.isArray(aux[atributo])) {\r\n                        delete aux[atributo];\r\n                      } else if (atributo === \"url\") {\r\n                        delete aux[atributo];\r\n                      } else if (atributo[0] + atributo[1] === \"id\") {\r\n                        delete aux[atributo];\r\n                      } else if (atributo === \"visible\") {\r\n                        aux.visible = false;\r\n                      }\r\n                    });\r\n\r\n                    await Api().put(element2.id, aux);\r\n                  });\r\n              } else if (\r\n                element2.visible === false &&\r\n                this.selection.find(\r\n                  (findElement2) => findElement2.id === element2.id\r\n                )\r\n              ) {\r\n                Api()\r\n                  .patch(element2.id)\r\n                  .then(async function(resposta) {\r\n                    var aux = resposta.data;\r\n                    await Object.keys(aux).forEach((atributo) => {\r\n                      if (Array.isArray(aux[atributo])) {\r\n                        delete aux[atributo];\r\n                      } else if (atributo === \"url\") {\r\n                        delete aux[atributo];\r\n                      } else if (atributo[0] + atributo[1] === \"id\") {\r\n                        delete aux[atributo];\r\n                      } else if (atributo === \"visible\") {\r\n                        aux.visible = true;\r\n                      }\r\n                    });\r\n\r\n                    await Api().put(element2.id, aux);\r\n                  });\r\n              }\r\n\r\n              if (\r\n                Array.isArray(element2.children) &&\r\n                element2.children.length\r\n              ) {\r\n                element2.children.forEach((element3) => {\r\n                  if (\r\n                    element3.visible === true &&\r\n                    !this.selection.find(\r\n                      (findElement3) => findElement3.id === element3.id\r\n                    )\r\n                  ) {\r\n                    Api()\r\n                      .patch(element3.id)\r\n                      .then(async function(resposta) {\r\n                        var aux = resposta.data;\r\n                        await Object.keys(aux).forEach((atributo) => {\r\n                          if (Array.isArray(aux[atributo])) {\r\n                            delete aux[atributo];\r\n                          } else if (atributo === \"url\") {\r\n                            delete aux[atributo];\r\n                          } else if (atributo[0] + atributo[1] === \"id\") {\r\n                            delete aux[atributo];\r\n                          } else if (atributo === \"visible\") {\r\n                            aux.visible = false;\r\n                          }\r\n                        });\r\n                        await Api().put(element3.id, aux);\r\n                      });\r\n                  } else if (\r\n                    element3.visible === false &&\r\n                    this.selection.find(\r\n                      (findElement3) => findElement3.id === element3.id\r\n                    )\r\n                  ) {\r\n                    Api()\r\n                      .patch(element3.id)\r\n                      .then(async function(resposta) {\r\n                        var aux = resposta.data;\r\n                        await Object.keys(aux).forEach((atributo) => {\r\n                          if (Array.isArray(aux[atributo])) {\r\n                            delete aux[atributo];\r\n                          } else if (atributo === \"url\") {\r\n                            delete aux[atributo];\r\n                          } else if (atributo[0] + atributo[1] === \"id\") {\r\n                            delete aux[atributo];\r\n                          } else if (atributo === \"visible\") {\r\n                            aux.visible = true;\r\n                          }\r\n                        });\r\n                        await Api().put(element3.id, aux);\r\n                      });\r\n                  }\r\n\r\n                  if (\r\n                    Array.isArray(element3.children) &&\r\n                    element3.children.length\r\n                  ) {\r\n                    element3.children.forEach((element4) => {\r\n                      if (\r\n                        element4.visible === true &&\r\n                        !this.selection.find(\r\n                          (findElement4) => findElement4.id === element4.id\r\n                        )\r\n                      ) {\r\n                        Api()\r\n                          .patch(element4.id)\r\n                          .then(async function(resposta) {\r\n                            var aux = resposta.data;\r\n                            await Object.keys(aux).forEach((atributo) => {\r\n                              if (Array.isArray(aux[atributo])) {\r\n                                delete aux[atributo];\r\n                              } else if (atributo === \"url\") {\r\n                                delete aux[atributo];\r\n                              } else if (atributo[0] + atributo[1] === \"id\") {\r\n                                delete aux[atributo];\r\n                              } else if (atributo === \"visible\") {\r\n                                aux.visible = false;\r\n                              }\r\n                            });\r\n                            await Api().put(element4.id, {\r\n                              aux,\r\n                            });\r\n                          });\r\n                      } else if (\r\n                        element4.visible === false &&\r\n                        this.selection.find(\r\n                          (findElement4) => findElement4.id === element4.id\r\n                        )\r\n                      ) {\r\n                        Api()\r\n                          .patch(element4.id)\r\n                          .then(async function(resposta) {\r\n                            var aux = resposta.data;\r\n                            await Object.keys(aux).forEach((atributo) => {\r\n                              if (Array.isArray(aux[atributo])) {\r\n                                delete aux[atributo];\r\n                              } else if (atributo === \"url\") {\r\n                                delete aux[atributo];\r\n                              } else if (atributo[0] + atributo[1] === \"id\") {\r\n                                delete aux[atributo];\r\n                              } else if (atributo === \"visible\") {\r\n                                aux.visible = true;\r\n                              }\r\n                            });\r\n                            await Api().put(element4.id, {\r\n                              aux,\r\n                            });\r\n                          });\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n        await setTimeout(async function() {\r\n          vm.$emit(\"close_or_save\", \"close\");\r\n        }, 300);\r\n      },\r\n\r\n      deselectAll() {\r\n        this.selection = [];\r\n      },\r\n      selectAll() {\r\n        var vm = this;\r\n        this.selection = [];\r\n        this.treeData.forEach((element) => {\r\n          vm.selection.push(element);\r\n          if (element.children) {\r\n            element.children.forEach((element2) => {\r\n              vm.selection.push(element2);\r\n              if (element2.children) {\r\n                element2.children.forEach((element3) => {\r\n                  vm.selection.push(element3);\r\n                  if (element3.children) {\r\n                    element3.children.forEach((element4) => {\r\n                      vm.selection.push(element4);\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      addRange(idAssessment) {\r\n        this.assessmentControl[idAssessment].ranges.push({\r\n          namerange: \"\",\r\n          initialvalue: \"\",\r\n          limitvalue: \"\",\r\n          url: \"\",\r\n        });\r\n      },\r\n      async deletaRange(idAssessment, idRange) {\r\n        if (this.assessmentControl[idAssessment].ranges[idRange].url) {\r\n          Api().delete(\r\n            this.assessmentControl[idAssessment].ranges[idRange].url\r\n          );\r\n        }\r\n        if (idRange == 0) {\r\n          this.assessmentControl[idAssessment].ranges.shift();\r\n        } else {\r\n          this.assessmentControl[idAssessment].ranges.splice(idRange, 1);\r\n        }\r\n      },\r\n      addAssessment() {\r\n        this.assessmentControl.push({\r\n          typeThreshold: \"\",\r\n          scopo: \"\",\r\n          fk_element: \"\",\r\n          valueType: \"\",\r\n          single: {\r\n            threshold: \"\",\r\n            url: \"\",\r\n          },\r\n          ranges: [],\r\n          url: \"\",\r\n        });\r\n      },\r\n      async deletaAssessment(idAssessment) {\r\n        if (this.assessmentControl[idAssessment].url !== null) {\r\n          await Api().delete(this.assessmentControl[idAssessment].url);\r\n        }\r\n        if (idAssessment == 0) {\r\n          this.assessmentControl.shift();\r\n        } else {\r\n          this.assessmentControl.splice(idAssessment, 1);\r\n        }\r\n      },\r\n      async deletaSingle(urlSingle) {\r\n        await Api().delete(urlSingle);\r\n      },\r\n      addPriorKnowledge() {\r\n        this.priorControl.push({\r\n          namepriorknowledge: \"\",\r\n          priorlevel: \"\",\r\n          fk_idconcept: \"\",\r\n          url: \"\",\r\n        });\r\n      },\r\n      async deletaPriorKnowledge(idPrior) {\r\n        if (this.priorControl[idPrior].url) {\r\n          await Api().delete(this.priorControl[idPrior].url);\r\n        }\r\n        if (idPrior == 0) {\r\n          this.priorControl.shift();\r\n        } else {\r\n          this.priorControl.splice(idPrior, 1);\r\n        }\r\n      },\r\n      async validate() {\r\n        if (this.$refs.form.validate()) {\r\n          var auxLoopValidation = 1;\r\n          for (var i = 0; i < this.assessmentControl.length; i++) {\r\n            for (var j = 0; j < this.assessmentControl.length; j++) {\r\n              if (\r\n                this.assessmentControl[i].fk_element ===\r\n                  this.assessmentControl[j].fk_element &&\r\n                i !== j\r\n              ) {\r\n                auxLoopValidation = 0;\r\n                this.messageError =\r\n                  \"Não pode existir mais de um parâmetro de avaliação para o mesmo elemento. Verifique os parâmetros de avaliação \" +\r\n                  (j + 1) +\r\n                  \" e \" +\r\n                  (i + 1) +\r\n                  \".\";\r\n                this.dialogError = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (auxLoopValidation === 1) {\r\n            for (var m = 0; m < this.priorControl.length; m++) {\r\n              for (var n = 0; n < this.priorControl.length; n++) {\r\n                if (\r\n                  this.priorControl[m].fk_idconcept ===\r\n                    this.priorControl[n].fk_idconcept &&\r\n                  m !== n\r\n                ) {\r\n                  auxLoopValidation = 0;\r\n                  this.messageError =\r\n                    \"Não é possível definir um conhecimento prioritário mais de uma vez. Verifique os conhecimentos prioritários \" +\r\n                    (n + 1) +\r\n                    \" e \" +\r\n                    (m + 1) +\r\n                    \".\";\r\n                  this.dialogError = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (auxLoopValidation === 1) {\r\n            await this.postAssessment();\r\n            await this.postPriorKnowledges();\r\n            await this.putVisible();\r\n            await this.resetVariables();\r\n          }\r\n        }\r\n      },\r\n      openDidaticDialog(dialog) {\r\n        this.$emit(\"openDidaticDialog\", dialog);\r\n      },\r\n      reset() {\r\n        this.$emit(\"close_or_save\", \"close\");\r\n        this.assessmentControl = [];\r\n        this.priorControl = [];\r\n      },\r\n      resetVariables() {\r\n        this.assessmentControl = [];\r\n        this.priorControl = [];\r\n      },\r\n      resetValidation() {\r\n        this.$refs.form.resetValidation();\r\n      },\r\n    },\r\n  };\r\n</script>\r\n"],"sourceRoot":"src/components/didatic_model"}]}