{"remainingRequest":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\src\\components\\TreeView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\src\\components\\TreeView.vue","mtime":1590763482864},{"path":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590347942431},{"path":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js","mtime":1590347941601},{"path":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1590348000448},{"path":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590347942431},{"path":"C:\\Users\\Vitor\\Documents\\200\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1590347998594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlZVZpZXciLAogIHByb3BzOiBbImRvbWluaW8iXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHJlZURhdGE6IFtdLAogICAgICBlbGVtZW50VHlwZXM6IHsKICAgICAgICBkb21pbmlvOiAiRG9tw61uaW8iLAogICAgICAgIG1vZHVsbzogIk3Ds2R1bG8iLAogICAgICAgIHN1Yk1vZHVsbzogIlN1Yk3Ds2R1bG8iLAogICAgICAgIGNvbmNlaXRvOiAiQ29uY2VpdG8iCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB0ZXN0OiBmdW5jdGlvbiB0ZXN0KHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZS5sZW5ndGgpIHsKICAgICAgICB0aGlzLiRlbWl0KCd0eXBlJywgewogICAgICAgICAgdHlwZTogdmFsdWVbMF0uc3BsaXQoJy8nKVszXSwKICAgICAgICAgIHVybDogdmFsdWVbMF0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHNldERvbWFpblZhcmlhYmxlczogZnVuY3Rpb24gc2V0RG9tYWluVmFyaWFibGVzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy50cmVlRGF0YSA9IFtdOwogICAgICB2YXIgaW5kZXhtb2R1bG8gPSAwOwogICAgICB0aGlzLnRyZWVEYXRhLnB1c2goewogICAgICAgIGlkOiB0aGlzLmRvbWluaW8udXJsLAogICAgICAgIG5hbWU6ICJbRE9NSU5JT10gIiArIHRoaXMuZG9taW5pby5uYW1la25vd2xlZGdlZG9tYWluLAogICAgICAgIGNoaWxkcmVuOiBbXQogICAgICB9KTsKCiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuZG9taW5pby5tb2R1bGVzKSAmJiB0aGlzLmRvbWluaW8ubW9kdWxlcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLmRvbWluaW8ubW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bG8pIHsKICAgICAgICAgIGlmIChtb2R1bG8uZmtfaWRtb2R1bGUgPT09IG51bGwpIHsKICAgICAgICAgICAgX3RoaXMudHJlZURhdGFbMF0uY2hpbGRyZW4ucHVzaCh7CiAgICAgICAgICAgICAgaWQ6IG1vZHVsby51cmwsCiAgICAgICAgICAgICAgbmFtZTogIltNT0RVTE9dICIgKyBtb2R1bG8ubmFtZW1vZHVsZSwKICAgICAgICAgICAgICBjaGlsZHJlbjogW10KICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBpZiAobW9kdWxvLnN1Ym1vZHVsZXMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgdmFyIGluZGV4c3VibW9kdWxvID0gMDsKICAgICAgICAgICAgICBtb2R1bG8uc3VibW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChzdWJtb2R1bG8pIHsKICAgICAgICAgICAgICAgIF90aGlzLnRyZWVEYXRhWzBdLmNoaWxkcmVuW2luZGV4bW9kdWxvXS5jaGlsZHJlbi5wdXNoKHsKICAgICAgICAgICAgICAgICAgaWQ6IHN1Ym1vZHVsby51cmwsCiAgICAgICAgICAgICAgICAgIG5hbWU6ICJbU1VCTU9EVUxPXSAiICsgc3VibW9kdWxvLm5hbWVtb2R1bGUsCiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKHN1Ym1vZHVsby5jb25jZXB0cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgc3VibW9kdWxvLmNvbmNlcHRzLmZvckVhY2goZnVuY3Rpb24gKGNvbmNlaXRvKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMudHJlZURhdGFbMF0uY2hpbGRyZW5baW5kZXhtb2R1bG9dLmNoaWxkcmVuW2luZGV4c3VibW9kdWxvXS5jaGlsZHJlbi5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiBjb25jZWl0by51cmwsCiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiW0NPTkNFSVRPXSAiICsgY29uY2VpdG8ubmFtZWNvbmNlcHQKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaW5kZXhzdWJtb2R1bG8rKzsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKG1vZHVsby5jb25jZXB0cy5sZW5ndGgpIHsKICAgICAgICAgICAgICBtb2R1bG8uY29uY2VwdHMuZm9yRWFjaChmdW5jdGlvbiAoY29uY2VpdG8pIHsKICAgICAgICAgICAgICAgIF90aGlzLnRyZWVEYXRhWzBdLmNoaWxkcmVuW2luZGV4bW9kdWxvXS5jaGlsZHJlbi5wdXNoKHsKICAgICAgICAgICAgICAgICAgaWQ6IGNvbmNlaXRvLmlkY29uY2VwdCArICIsIiArIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGNvbmNlaXRvKVsxXSwKICAgICAgICAgICAgICAgICAgbmFtZTogIltDT05DRUlUT10gIiArIGNvbmNlaXRvLm5hbWVjb25jZXB0CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaW5kZXhtb2R1bG8rKzsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRvbWluaW86IGZ1bmN0aW9uIGRvbWluaW8oKSB7CiAgICAgIHRoaXMuc2V0RG9tYWluVmFyaWFibGVzKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TreeView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<v-container>\r\n    <div class=\"ml-4\">\r\n        <v-app-bar color=\"#63B0B0\" dense dark>\r\n            <v-spacer />\r\n            <v-toolbar-title>Modelo Conceitual</v-toolbar-title>\r\n            <v-spacer></v-spacer>\r\n\r\n            <v-btn icon>\r\n                <v-icon>mdi-magnify</v-icon>\r\n            </v-btn>\r\n        </v-app-bar>\r\n    </div>\r\n    <v-treeview open-all  @update:active=\"test\" :items=\"treeData\" activatable></v-treeview>\r\n</v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"TreeView\",\r\n    props: [\"dominio\"],\r\n    data: () => ({\r\n        treeData: [],\r\n        elementTypes: {\r\n            dominio: \"Domínio\",\r\n            modulo: \"Módulo\",\r\n            subModulo: \"SubMódulo\",\r\n            conceito: \"Conceito\"\r\n        },\r\n    }),\r\n    methods: {\r\n        test(value) {\r\n            if (value.length) {\r\n                this.$emit('type', { type: value[0].split('/')[3], url: value[0]});\r\n            }\r\n\r\n        },\r\n        setDomainVariables() {\r\n            this.treeData = []\r\n            var indexmodulo = 0;\r\n            this.treeData.push({\r\n                id: this.dominio.url,\r\n                name: \"[DOMINIO] \" + this.dominio.nameknowledgedomain,\r\n                children: []\r\n            })\r\n            if (Array.isArray(this.dominio.modules) && this.dominio.modules.length) {\r\n                this.dominio.modules.forEach(modulo => {\r\n\r\n                    if (modulo.fk_idmodule === null) {\r\n                        this.treeData[0].children.push({\r\n                            id: modulo.url,\r\n                            name: \"[MODULO] \" + modulo.namemodule,\r\n                            children: []\r\n                        })\r\n\r\n                        if (modulo.submodules.length) {\r\n                            var indexsubmodulo = 0;\r\n                            modulo.submodules.forEach(submodulo => {\r\n                                this.treeData[0].children[indexmodulo].children.push({\r\n                                    id: submodulo.url,\r\n                                    name: \"[SUBMODULO] \" + submodulo.namemodule,\r\n                                    children: []\r\n                                })\r\n\r\n                                if (submodulo.concepts.length) {\r\n                                    submodulo.concepts.forEach(conceito => {\r\n                                        this.treeData[0].children[indexmodulo].children[indexsubmodulo].children.push({\r\n                                            id: conceito.url,\r\n                                            name: \"[CONCEITO] \" + conceito.nameconcept\r\n                                        })\r\n                                    });\r\n\r\n                                }\r\n                                indexsubmodulo++;\r\n                            });\r\n\r\n                        }\r\n                        if (modulo.concepts.length) {\r\n                            modulo.concepts.forEach(conceito => {\r\n                                this.treeData[0].children[indexmodulo].children.push({\r\n                                    id: conceito.idconcept + \",\" + Object.getOwnPropertyNames(conceito)[1],\r\n                                    name: \"[CONCEITO] \" + conceito.nameconcept\r\n                                })\r\n                            });\r\n                        }\r\n\r\n                        indexmodulo++;\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        },\r\n    },\r\n    watch: {\r\n        dominio: function () {\r\n            this.setDomainVariables();\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}