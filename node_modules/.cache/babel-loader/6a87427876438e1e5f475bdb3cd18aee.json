{"remainingRequest":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/babel-loader/lib/index.js!/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vitor/Documentos/EducomML/EducomML_Front/master/src/components/didatic_model/VisibleDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/src/components/didatic_model/VisibleDialog.vue","mtime":1594154640672},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js","mtime":1593613513250},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/babel-loader/lib/index.js","mtime":1593613513143},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vuetify-loader/lib/loader.js","mtime":1593613518416},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/cache-loader/dist/cjs.js","mtime":1593613513250},{"path":"/home/vitor/Documentos/EducomML/EducomML_Front/master/node_modules/vue-loader/lib/index.js","mtime":1593613518353}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VisibleDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <v-card-title style=\"background-color:purple; color:white;\">\n      <span class=\"headline\">\n        <p>Defina as informações equivalentes ao modelo didático.</p>\n      </span>\n    </v-card-title>\n    <v-row style=\"width : 100%\">\n      <v-col cols=\"4\">\n        <v-card-text>\n          <v-row class=\"ml-2\">\n            <v-btn\n              color=\"warning\"\n              height=\"40px\"\n              dark\n              x-small\n              small\n              @click=\"deselectAll()\"\n            >Deselecionar tudo</v-btn>\n            <v-btn\n              class=\"ml-1\"\n              color=\"primary\"\n              height=\"40\"\n              dark\n              small\n              @click=\"selectAll()\"\n            >Selecionar tudo</v-btn>\n          </v-row>\n\n          <v-treeview\n            @update:active=\"test\"\n            v-model=\"selection\"\n            :selection-type=\"'independent'\"\n            :items=\"treeData\"\n            return-object\n            selectable\n            selected-color=\"success\"\n            open-all\n          ></v-treeview>\n        </v-card-text>\n      </v-col>\n      <v-col cols=\"8\">\n        <v-row>\n          <h3 class=\"mt-5\">Parâmetros de avaliação</h3>\n          <v-btn icon=\"icon\" class=\"mb-1\">\n            <v-icon large class=\"mt-9 ml-2\" color=\"primary\" @click=\"addAssessment()\">mdi-plus-box</v-icon>\n          </v-btn>\n        </v-row>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-row\n            v-for=\"(assessment, i) in assessmentControl\"\n            :key=\"i\"\n            style=\"margin-bottom: -20px;\"\n          >\n            <v-col cols=\"2\">\n              <v-select\n                v-model=\"assessmentControl[i].scopo\"\n                :items=\"scopoTypes\"\n                :rules=\"[v => !!v || 'Conceito é requerido']\"\n                label=\"Scopo\"\n                style=\"margin:0px;\"\n                required\n              ></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-select\n                v-model=\"assessmentControl[i].fk_element\"\n                :items=\"elementData\"\n                :rules=\"[v => !!v || 'O tipo do conceito é requerido']\"\n                label=\"Elemento\"\n                style=\"margin:0px;\"\n                required\n              ></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-select\n                v-model=\"assessmentControl[i].typeThreshold\"\n                :items=\"typesThreshold\"\n                :rules=\"[v => !!v || 'O tipo do conceito é requerido']\"\n                label=\"Tipo de Threshold\"\n                style=\"margin:0px;\"\n                required\n              ></v-select>\n            </v-col>\n            <v-col cols=\"2\">\n              <v-select\n                style=\"margin-top: -1px;\"\n                v-model=\"assessmentControl[i].valueType\"\n                :items=\"valueTypes\"\n                :rules=\"[v => !!v || 'O tipo de dado é requerido']\"\n                label=\"Tipo de Dado\"\n                required\n              ></v-select>\n              <v-text-field\n                style=\"margin-top: -1px; margin-bottom: -10px;\"\n                v-if=\"assessmentControl[i].valueType==='Single'\"\n                v-model=\"assessmentControl[i].single.threshold\"\n                label=\"Valor\"\n                :suffix=\" assessmentControl[i].typeThreshold===1 ? '%' : ''\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"2\" class=\"mt-2\">\n              <v-btn icon=\"icon\" class=\"mb-1\" v-if=\"assessmentControl[i].valueType==='Range'\">\n                <v-icon large class=\"mb-1\" color=\"primary\" @click=\"addRange(i)\">mdi-plus-box</v-icon>\n              </v-btn>\n              <v-btn icon=\"icon\" class=\"mb-1\">\n                <v-icon large class=\"mb-1\" color=\"red\" @click=\"deletaAssessment(i)\">mdi-minus-box</v-icon>\n              </v-btn>\n            </v-col>\n            <v-row v-if=\"assessmentControl[i].valueType === 'Single'\" style=\"margin-top: -40px;\">\n              <v-col cols=\"7\"></v-col>\n              <v-col cols=\"2\" class=\"ml-10\"></v-col>\n            </v-row>\n            <div v-else>\n              <v-row\n                v-for=\"(range, idRange) in assessment.ranges\"\n                :key=\"idRange\"\n                style=\"margin-top: -30px;\"\n              >\n                <v-col cols=\"4\"></v-col>\n                <v-col cols=\"3\">\n                  <v-text-field\n                    v-model=\"assessmentControl[i].ranges[idRange].namerange\"\n                    counter=\"15\"\n                    label=\"Nome do range\"\n                    style=\"margin:0px;\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"2\">\n                  <v-text-field\n                    v-model=\"assessmentControl[i].ranges[idRange].initialvalue\"\n                    label=\"Valor inicial\"\n                    style=\"margin:0px;\"\n                    type=\"number\"\n                    :suffix=\" assessmentControl[i].typeThreshold===1 ? '%' : ''\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"2\">\n                  <v-text-field\n                    v-model=\"assessmentControl[i].ranges[idRange].limitvalue\"\n                    label=\"Valor Limite\"\n                    style=\"margin:0px;\"\n                    type=\"number\"\n                    :suffix=\" assessmentControl[i].typeThreshold===1 ? '%' : ''\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"1\">\n                  <v-btn icon=\"icon\" class=\"mt-4\">\n                    <v-icon\n                      large\n                      class=\"mb-1\"\n                      color=\"red\"\n                      @click=\"deletaRange(i, idRange)\"\n                    >mdi-minus-box</v-icon>\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </div>\n          </v-row>\n          <v-row>\n            <h3 class=\"mt-5\">Conhecimentos prioritários</h3>\n            <v-btn icon=\"icon\" class=\"mb-1\">\n              <v-icon\n                large\n                class=\"mt-9 ml-2\"\n                color=\"primary\"\n                @click=\"addPriorKnowledge()\"\n              >mdi-plus-box</v-icon>\n            </v-btn>\n          </v-row>\n          <v-row\n            v-for=\"(prior, idPrior) in priorControl\"\n            :key=\"idPrior\"\n            style=\"margin-bottom: -25px;\"\n          >\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"priorControl[idPrior].fk_idconcept\"\n                :items=\"conceptsPrior\"\n                :rules=\"[v => !!v || 'Necessário informar o conceito prioritário']\"\n                label=\"Conceito Prioritário\"\n                style=\"margin:0px;\"\n                required\n              ></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-text-field\n                style=\"margin-top: -1px; margin-bottom: -10px;\"\n                :rules=\"[v => !!v || 'Necessário informar identificador da prioridade']\"\n                v-model=\"priorControl[idPrior].namepriorknowledge\"\n                label=\"Identificador da prioridade\"\n                required\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-select\n                v-model=\"priorControl[idPrior].priorlevel\"\n                :items=\"priorLevels\"\n                :rules=\"[v => !!v || 'Necessário informar o nível de prioridade']\"\n                label=\"Nível de prioridade\"\n                style=\"margin:0px;\"\n                required\n              ></v-select>\n            </v-col>\n            <v-col cols=\"1\">\n              <v-btn icon=\"icon\" class=\"mt-4\">\n                <v-icon\n                  large\n                  class=\"mb-1\"\n                  color=\"red\"\n                  @click=\"deletaPriorKnowledge(idPrior)\"\n                >mdi-minus-box</v-icon>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-col>\n    </v-row>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn color=\"red\" height=\"49\" dark large @click=\"reset\">\n        Close\n        <v-icon dark right>mdi-close</v-icon>\n      </v-btn>\n      <v-btn color=\"success\" height=\"49\" dark large @click=\"validate\">\n        Save\n        <v-icon dark right>mdi-content-save</v-icon>\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nexport default {\n  name: \"VisibleDialog\",\n  props: [\"domain\", \"dialog\"],\n  data: () => ({\n    valid: true,\n    treeData: [],\n    selection: [],\n    elementData: [],\n    scopoTypes: [\n      {\n        text: \"Avaliação\",\n        value: 1\n      },\n      {\n        text: \"Domínio\",\n        value: 2\n      }\n    ],\n    typesThreshold: [\n      {\n        text: \"Porcentagem\",\n        value: 1\n      },\n      {\n        text: \"Literal\",\n        value: 2\n      }\n    ],\n    valueTypes: [\"Single\", \"Range\"],\n    assessmentControl: [],\n    conceptsPrior: [],\n    priorControl: [],\n    priorLevels: [\n      {\n        text: \"Obrigatório\",\n        value: 1\n      },\n      {\n        text: \"Desejável\",\n        value: 2\n      }\n    ],\n    newItems: [],\n    checkbox: true\n  }),\n  watch: {\n    domain: async function() {\n      console.log(\"oi domain\");\n      this.assessmentControl = [];\n      this.priorControl = [];\n      if (this.domain) {\n        this.treeData = [];\n        this.selection = [];\n        await this.getAssessments();\n        await this.setDomainVariables();\n      }\n    },\n    assessmentControl: function() {\n      this.assessmentControl.forEach(assess => {\n        if (assess.valueType === \"Single\") {\n          assess.ranges.forEach(range => {\n            if (range.url) {\n              this.deletaSingle(range.url);\n            }\n          });\n          assess.ranges = [];\n        } else if (assess.valueType === \"Range\") {\n          if (assess.single.url) {\n            this.deletaSingle(assess.single.url);\n            assess.single.url = \"\";\n          }\n          assess.single.threshold = \"\";\n        }\n      });\n    }\n  },\n  mounted: async function() {\n    this.assessmentControl = [];\n    this.priorControl = [];\n    if (this.domain) {\n      this.treeData = [];\n      this.selection = [];\n      await this.getAssessments();\n      await this.setDomainVariables();\n    }\n  },\n  methods: {\n    getAssessments() {\n      // var vm = this;\n      if (this.domain) {\n        if (this.domain.assessmentparameter.length > 0) {\n          var assess = {\n            typeThreshold: parseInt(\n              this.domain.assessmentparameter[0].typethreshold.split(\"/\")[4]\n            ),\n            scopo: parseInt(\n              this.domain.assessmentparameter[0].scopo.split(\"/\")[4]\n            ),\n            fk_element: this.domain.assessmentparameter[0].fk_idknowledgedomain,\n            valueType: \"\",\n            single: {\n              threshold: \"\",\n              url: \"\"\n            },\n            ranges: [],\n            url: this.domain.assessmentparameter[0].url\n          };\n          if (this.domain.assessmentparameter[0].single.length > 0) {\n            assess.valueType = \"Single\";\n            assess.single.threshold = this.domain.assessmentparameter[0].single[0].threshold;\n            assess.single.url = this.domain.assessmentparameter[0].single[0].url;\n          } else if (this.domain.assessmentparameter[0].ranges.length > 0) {\n            assess.valueType = \"Range\";\n            this.domain.assessmentparameter[0].ranges.forEach(range => {\n              assess.ranges.push({\n                namerange: range.namerange,\n                initialvalue: range.initialvalue,\n                limitvalue: range.limitvalue,\n                url: range.url\n              });\n            });\n          }\n          this.assessmentControl.push(assess);\n        }\n        if (this.domain.modules) {\n          this.domain.modules.forEach(module => {\n            if (module.assessmentparameter.length > 0) {\n              var assess = {\n                typeThreshold: parseInt(\n                  module.assessmentparameter[0].typethreshold.split(\"/\")[4]\n                ),\n                scopo: parseInt(\n                  module.assessmentparameter[0].scopo.split(\"/\")[4]\n                ),\n                fk_element: module.url,\n                valueType: \"\",\n                single: {\n                  threshold: \"\",\n                  url: \"\"\n                },\n                ranges: [],\n                url: module.assessmentparameter[0].url\n              };\n              if (module.assessmentparameter[0].single.length > 0) {\n                assess.valueType = \"Single\";\n                assess.single.threshold =\n                  module.assessmentparameter[0].single[0].threshold;\n                assess.single.url = module.assessmentparameter[0].single[0].url;\n              } else if (module.assessmentparameter[0].ranges.length > 0) {\n                assess.valueType = \"Range\";\n                module.assessmentparameter[0].ranges.forEach(range => {\n                  assess.ranges.push({\n                    namerange: range.namerange,\n                    initialvalue: range.initialvalue,\n                    limitvalue: range.limitvalue,\n                    url: range.url\n                  });\n                });\n              }\n              this.assessmentControl.push(assess);\n            }\n            if (module.concepts) {\n              module.concepts.forEach(moduleConcept => {\n                if (moduleConcept.assessmentparameter.length > 0) {\n                  var assess = {\n                    typeThreshold: parseInt(\n                      moduleConcept.assessmentparameter[0].typethreshold.split(\n                        \"/\"\n                      )[4]\n                    ),\n                    scopo: parseInt(\n                      moduleConcept.assessmentparameter[0].scopo.split(\"/\")[4]\n                    ),\n                    fk_element: moduleConcept.url,\n                    valueType: \"\",\n                    single: {\n                      threshold: \"\",\n                      url: \"\"\n                    },\n                    ranges: [],\n                    url: moduleConcept.assessmentparameter[0].url\n                  };\n                  if (moduleConcept.assessmentparameter[0].single.length > 0) {\n                    assess.valueType = \"Single\";\n                    assess.single.threshold =\n                      moduleConcept.assessmentparameter[0].single[0].threshold;\n                    assess.single.url =\n                      moduleConcept.assessmentparameter[0].single[0].url;\n                  } else if (\n                    moduleConcept.assessmentparameter[0].ranges.length > 0\n                  ) {\n                    assess.valueType = \"Range\";\n                    moduleConcept.assessmentparameter[0].ranges.forEach(\n                      range => {\n                        assess.ranges.push({\n                          namerange: range.namerange,\n                          initialvalue: range.initialvalue,\n                          limitvalue: range.limitvalue,\n                          url: range.url\n                        });\n                      }\n                    );\n                  }\n                  this.assessmentControl.push(assess);\n                }\n                if (moduleConcept.priorknowledge.length > 0) {\n                  this.priorControl.push({\n                    namepriorknowledge:\n                      moduleConcept.priorknowledge[0].namepriorknowledge,\n                    priorlevel: parseInt(\n                      moduleConcept.priorknowledge[0].priorlevel.split(\"/\")[4]\n                    ),\n                    fk_idconcept: moduleConcept.priorknowledge[0].fk_idconcept,\n                    url: moduleConcept.priorknowledge[0].url\n                  });\n                }\n              });\n            }\n            if (module.submodules) {\n              module.submodules.forEach(submodule => {\n                if (submodule.assessmentparameter.length > 0) {\n                  var assess = {\n                    typeThreshold: parseInt(\n                      submodule.assessmentparameter[0].typethreshold.split(\n                        \"/\"\n                      )[4]\n                    ),\n                    scopo: parseInt(\n                      submodule.assessmentparameter[0].scopo.split(\"/\")[4]\n                    ),\n                    fk_element: submodule.url,\n                    valueType: \"\",\n                    single: {\n                      threshold: \"\",\n                      url: \"\"\n                    },\n                    ranges: [],\n                    url: submodule.assessmentparameter[0].url\n                  };\n                  if (submodule.assessmentparameter[0].single.length > 0) {\n                    assess.valueType = \"Single\";\n                    assess.single.threshold =\n                      submodule.assessmentparameter[0].single[0].threshold;\n                    assess.single.url =\n                      submodule.assessmentparameter[0].single[0].url;\n                  } else if (\n                    submodule.assessmentparameter[0].ranges.length > 0\n                  ) {\n                    assess.valueType = \"Range\";\n                    submodule.assessmentparameter[0].ranges.forEach(range => {\n                      assess.ranges.push({\n                        namerange: range.namerange,\n                        initialvalue: range.initialvalue,\n                        limitvalue: range.limitvalue,\n                        url: range.url\n                      });\n                    });\n                  }\n                  this.assessmentControl.push(assess);\n                }\n                if (submodule.concepts) {\n                  submodule.concepts.forEach(submoduleConcept => {\n                    if (submoduleConcept.assessmentparameter.length > 0) {\n                      var assess = {\n                        typeThreshold: parseInt(\n                          submoduleConcept.assessmentparameter[0].typethreshold.split(\n                            \"/\"\n                          )[4]\n                        ),\n                        scopo: parseInt(\n                          submoduleConcept.assessmentparameter[0].scopo.split(\n                            \"/\"\n                          )[4]\n                        ),\n                        fk_element: submoduleConcept.url,\n                        valueType: \"\",\n                        single: {\n                          threshold: \"\",\n                          url: \"\"\n                        },\n                        ranges: [],\n                        url: submoduleConcept.assessmentparameter[0].url\n                      };\n                      if (\n                        submoduleConcept.assessmentparameter[0].single.length >\n                        0\n                      ) {\n                        assess.valueType = \"Single\";\n                        assess.single.threshold =\n                          submoduleConcept.assessmentparameter[0].single[0].threshold;\n                        assess.single.url =\n                          submoduleConcept.assessmentparameter[0].single[0].url;\n                      } else if (\n                        submoduleConcept.assessmentparameter[0].ranges.length >\n                        0\n                      ) {\n                        assess.valueType = \"Range\";\n                        submoduleConcept.assessmentparameter[0].ranges.forEach(\n                          range => {\n                            assess.ranges.push({\n                              namerange: range.namerange,\n                              initialvalue: range.initialvalue,\n                              limitvalue: range.limitvalue,\n                              url: range.url\n                            });\n                          }\n                        );\n                      }\n                      this.assessmentControl.push(assess);\n                    }\n                    if (submoduleConcept.priorknowledge.length > 0) {\n                      this.priorControl.push({\n                        namepriorknowledge:\n                          submoduleConcept.priorknowledge[0].namepriorknowledge,\n                        priorlevel: parseInt(\n                          submoduleConcept.priorknowledge[0].priorlevel.split(\n                            \"/\"\n                          )[4]\n                        ),\n                        fk_idconcept:\n                          submoduleConcept.priorknowledge[0].fk_idconcept,\n                        url: submoduleConcept.priorknowledge[0].url\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n    },\n    test(value) {\n      if (value.length) {\n        if (value[0].split(\"/\")[5] === \"sub\") {\n          this.$emit(\"type\", { type: \"submodulo\", url: value[0] });\n        } else {\n          this.$emit(\"type\", { type: value[0].split(\"/\")[3], url: value[0] });\n        }\n      }\n    },\n    setDomainVariables() {\n      this.treeData = [];\n      this.elementData.push({\n        text: \"[DOMINIO] \" + this.domain.nameknowledgedomain,\n        value: this.domain.url\n      });\n      var indexmodulo = 0;\n      if (this.domain.mobilemedias.length) {\n        this.domain.mobilemedias.forEach(mobilemedia => {\n          var object = {\n            id: mobilemedia.url,\n            name: \"[MOBILEMEDIA] \" + mobilemedia.label,\n            visible: mobilemedia.visible\n          };\n          this.treeData.push(object);\n          if (object.visible) {\n            this.selection.push(object);\n          }\n          indexmodulo++;\n        });\n      }\n      if (this.domain.instructionalelements.length) {\n        this.domain.instructionalelements.forEach(instructionalelement => {\n          if (\n            instructionalelement.fk_instructionalelementtype.split(\"/\")[4] !== 4\n          ) {\n            var object = {\n              id: instructionalelement.url,\n              name: \"[INSTRUCTIONAL ELEMENT] \" + instructionalelement.label,\n              visible: instructionalelement.visible\n            };\n            this.treeData.push(object);\n            if (object.visible) {\n              this.selection.push(object);\n            }\n            indexmodulo++;\n          }\n        });\n      }\n      if (Array.isArray(this.domain.modules) && this.domain.modules.length) {\n        this.domain.modules.forEach(modulo => {\n          if (modulo.fk_idmodule === null) {\n            var indexsubmodulo = 0;\n            var object = {\n              id: modulo.url,\n              name: \"[MODULO] \" + modulo.namemodule,\n              visible: modulo.visible,\n              children: []\n            };\n            this.treeData.push(object);\n            this.elementData.push({\n              text: object.name,\n              value: object.id\n            });\n            if (object.visible) {\n              this.selection.push(object);\n            }\n            if (modulo.mobilemedias.length) {\n              modulo.mobilemedias.forEach(mobilemedia => {\n                var object = {\n                  id: mobilemedia.url,\n                  name: \"[MOBILEMEDIA] \" + mobilemedia.label,\n                  visible: mobilemedia.visible\n                };\n                this.treeData[indexmodulo].children.push(object);\n                if (object.visible) {\n                  this.selection.push(object);\n                }\n                indexsubmodulo++;\n              });\n            }\n\n            if (modulo.instructionalelements.length) {\n              modulo.instructionalelements.forEach(instructionalelement => {\n                if (\n                  instructionalelement.fk_instructionalelementtype.split(\n                    \"/\"\n                  )[4] !== 4\n                ) {\n                  var object = {\n                    id: instructionalelement.url,\n                    name:\n                      \"[INSTRUCTIONAL ELEMENT] \" + instructionalelement.label,\n                    visible: instructionalelement.visible\n                  };\n                  this.treeData[indexmodulo].children.push(object);\n                  if (object.visible) {\n                    this.selection.push(object);\n                  }\n                  indexsubmodulo++;\n                }\n              });\n            }\n\n            if (modulo.submodules.length) {\n              var indexconceito = 0;\n              modulo.submodules.forEach(submodulo => {\n                var object = {\n                  id: submodulo.url,\n                  name: \"[SUBMODULO] \" + submodulo.namemodule,\n                  visible: submodulo.visible,\n                  children: []\n                };\n                this.treeData[indexmodulo].children.push(object);\n                this.elementData.push({\n                  text: object.name,\n                  value: object.id\n                });\n                if (object.visible) {\n                  this.selection.push(object);\n                }\n\n                if (submodulo.mobilemedias.length) {\n                  submodulo.mobilemedias.forEach(mobilemedia => {\n                    var object = {\n                      id: mobilemedia.url,\n                      name: \"[MOBILEMEDIA] \" + mobilemedia.label,\n                      visible: mobilemedia.visible\n                    };\n                    this.treeData[indexmodulo].children[\n                      indexsubmodulo\n                    ].children.push(object);\n                    if (object.visible) {\n                      this.selection.push(object);\n                    }\n                    indexconceito++;\n                  });\n                }\n\n                if (submodulo.instructionalelements.length) {\n                  submodulo.instructionalelements.forEach(\n                    instructionalelement => {\n                      var object = {\n                        id: instructionalelement.url,\n                        name:\n                          \"[INSTRUCTIONAL ELEMENT] \" +\n                          instructionalelement.label,\n                        visible: instructionalelement.visible\n                      };\n                      this.treeData[indexmodulo].children[\n                        indexsubmodulo\n                      ].children.push(object);\n                      if (object.visible) {\n                        this.selection.push(object);\n                      }\n                      indexconceito++;\n                    }\n                  );\n                }\n\n                if (submodulo.concepts.length) {\n                  submodulo.concepts.forEach(conceito => {\n                    var object = {\n                      id: conceito.url,\n                      name: \"[CONCEITO] \" + conceito.nameconcept,\n                      visible: conceito.visible,\n                      children: []\n                    };\n                    this.treeData[indexmodulo].children[\n                      indexsubmodulo\n                    ].children.push(object);\n\n                    this.elementData.push({\n                      text: object.name,\n                      value: object.id\n                    });\n                    if (object.visible) {\n                      this.selection.push(object);\n                    }\n                    this.conceptsPrior.push({\n                      text: object.name,\n                      value: object.id\n                    });\n\n                    if (conceito.mobilemedias.length) {\n                      conceito.mobilemedias.forEach(mobilemedia => {\n                        var object = {\n                          id: mobilemedia.url,\n                          name: \"[MOBILEMEDIA] \" + mobilemedia.label,\n                          visible: mobilemedia.visible\n                        };\n                        this.treeData[indexmodulo].children[\n                          indexsubmodulo\n                        ].children[indexconceito].children.push(object);\n                        if (object.visible) {\n                          this.selection.push(object);\n                        }\n                      });\n                    }\n\n                    if (conceito.instructionalelements.length) {\n                      conceito.instructionalelements.forEach(\n                        instructionalelement => {\n                          var object = {\n                            id: instructionalelement.url,\n                            name:\n                              \"[INSTRUCTIONAL ELEMENT] \" +\n                              instructionalelement.label,\n                            visible: instructionalelement.visible\n                          };\n                          this.treeData[indexmodulo].children[\n                            indexsubmodulo\n                          ].children[indexconceito].children.push(object);\n                          if (object.visible) {\n                            this.selection.push(object);\n                          }\n                        }\n                      );\n                    }\n\n                    if (conceito.informationitems.length) {\n                      conceito.informationitems.forEach(procedure => {\n                        if (\n                          procedure.fk_informationitemtype ===\n                          \"http://127.0.0.1:8000/informationitemtype/4/\"\n                        ) {\n                          var object = {\n                            id: procedure.url,\n                            name:\n                              \"[PROCEDIMENTO] \" + procedure.nameinformationitem,\n                            visible: procedure.visible\n                          };\n                          this.treeData[indexmodulo].children[\n                            indexsubmodulo\n                          ].children[indexconceito].children.push(object);\n                          if (object.visible) {\n                            this.selection.push(object);\n                          }\n                        }\n                      });\n                    }\n\n                    indexconceito++;\n                  });\n                }\n                indexsubmodulo++;\n              });\n            }\n            if (modulo.concepts.length) {\n              if (indexsubmodulo > 0) {\n                indexconceito = indexsubmodulo;\n              } else {\n                indexconceito = 0;\n              }\n              modulo.concepts.forEach(conceito => {\n                var object = {\n                  id: conceito.url,\n                  name: \"[CONCEITO] \" + conceito.nameconcept,\n                  visible: conceito.visible,\n                  children: []\n                };\n                this.treeData[indexmodulo].children.push(object);\n\n                this.elementData.push({\n                  text: object.name,\n                  value: object.id\n                });\n                if (object.visible) {\n                  this.selection.push(object);\n                }\n                this.conceptsPrior.push({\n                  text: object.name,\n                  value: object.id\n                });\n                if (conceito.mobilemedias.length) {\n                  conceito.mobilemedias.forEach(mobilemedia => {\n                    var object = {\n                      id: mobilemedia.url,\n                      name: \"[MOBILEMEDIA] \" + mobilemedia.label,\n                      visible: mobilemedia.visible\n                    };\n                    this.treeData[indexmodulo].children[\n                      indexconceito\n                    ].children.push(object);\n                    if (object.visible) {\n                      this.selection.push(object);\n                    }\n                  });\n                }\n\n                if (conceito.instructionalelements.length) {\n                  conceito.instructionalelements.forEach(\n                    instructionalelement => {\n                      var object = {\n                        id: instructionalelement.url,\n                        name:\n                          \"[INSTRUCTIONAL ELEMENT] \" +\n                          instructionalelement.label,\n                        visible: instructionalelement.visible\n                      };\n                      this.treeData[indexmodulo].children[\n                        indexconceito\n                      ].children.push(object);\n                      if (object.visible) {\n                        this.selection.push(object);\n                      }\n                    }\n                  );\n                }\n\n                if (conceito.informationitems.length) {\n                  conceito.informationitems.forEach(procedure => {\n                    if (\n                      procedure.fk_informationitemtype ===\n                      \"http://127.0.0.1:8000/informationitemtype/4/\"\n                    ) {\n                      var object = {\n                        id: procedure.url,\n                        name: \"[PROCEDIMENTO] \" + procedure.nameinformationitem,\n                        visible: procedure.visible\n                      };\n                      this.treeData[indexmodulo].children[\n                        indexconceito\n                      ].children.push(object);\n                      if (object.visible) {\n                        this.selection.push(object);\n                      }\n                    }\n                  });\n                }\n                indexconceito++;\n              });\n            }\n            indexmodulo++;\n          }\n        });\n      }\n    },\n    async postAssessment() {\n      var vm = this;\n      var header = await this.$store.dispatch(\"getHeader\");\n      await this.assessmentControl.forEach(async assessment => {\n        var auxAssessment = {\n          typethreshold:\n            `http://127.0.0.1:8000/typethreshold/` +\n            assessment.typeThreshold +\n            `/`,\n          scopo: `http://127.0.0.1:8000/scopo/` + assessment.scopo + `/`,\n          fk_idknowledgedomain: null,\n          fk_idmodule: null,\n          fk_idconcept: null\n        };\n        if (assessment.fk_element.split(\"/\")[3] === \"knowledgedomain\") {\n          auxAssessment.fk_idknowledgedomain = assessment.fk_element;\n        } else if (assessment.fk_element.split(\"/\")[3] === \"module\") {\n          auxAssessment.fk_idmodule = assessment.fk_element;\n        } else if (assessment.fk_element.split(\"/\")[3] === \"concept\") {\n          auxAssessment.fk_idconcept = assessment.fk_element;\n        }\n\n        if (assessment.url) {\n          await this.axios\n            .put(assessment.url, auxAssessment, header)\n            .then(async function(resposta) {\n              if (assessment.valueType === \"Single\") {\n                if (assessment.ranges) {\n                  assessment.ranges.forEach(range => {\n                    if (range.url) {\n                      vm.axios.delete(range.url, header);\n                    }\n                  });\n                }\n                await vm.axios.put(\n                  assessment.single.url,\n                  {\n                    fk_idassessmentparameter: resposta.data.url,\n                    threshold: assessment.single.threshold\n                  },\n                  header\n                );\n              } else if (assessment.valueType === \"Range\") {\n                if (assessment.single.url) {\n                  vm.axios.delete(assessment.single.url, header);\n                }\n                assessment.ranges.forEach(async range => {\n                  if (range.url) {\n                    await vm.axios.put(\n                      range.url,\n                      {\n                        namerange: range.namerange,\n                        fk_idassessmentparameter: resposta.data.url,\n                        initialvalue: range.initialvalue,\n                        limitvalue: range.limitvalue\n                      },\n                      header\n                    );\n                  } else {\n                    await vm.axios.post(\n                      \"http://127.0.0.1:8000/range/\",\n                      {\n                        namerange: range.namerange,\n                        fk_idassessmentparameter: resposta.data.url,\n                        initialvalue: range.initialvalue,\n                        limitvalue: range.limitvalue\n                      },\n                      header\n                    );\n                  }\n                });\n              }\n            });\n        } else {\n          await this.axios\n            .post(\n              \"http://127.0.0.1:8000/assessmentparameter/\",\n              auxAssessment,\n              header\n            )\n            .then(async function(resposta) {\n              if (assessment.valueType === \"Single\") {\n                await vm.axios.post(\n                  \"http://127.0.0.1:8000/single/\",\n                  {\n                    fk_idassessmentparameter: resposta.data.url,\n                    threshold: assessment.single.threshold\n                  },\n                  header\n                );\n              } else if (assessment.valueType === \"Range\") {\n                assessment.ranges.forEach(async range => {\n                  await vm.axios.post(\n                    \"http://127.0.0.1:8000/range/\",\n                    {\n                      namerange: range.namerange,\n                      fk_idassessmentparameter: resposta.data.url,\n                      initialvalue: range.initialvalue,\n                      limitvalue: range.limitvalue\n                    },\n                    header\n                  );\n                });\n              }\n            });\n        }\n      });\n    },\n    async postPriorKnowledges() {\n      var vm = this;\n      var header = await this.$store.dispatch(\"getHeader\");\n      console.log(\"Felipe Prior\", vm.priorControl);\n      await this.priorControl.forEach(async prior => {\n        if (prior.url) {\n          await vm.axios.put(\n            prior.url,\n            {\n              namepriorknowledge: prior.namepriorknowledge,\n              priorlevel:\n                `http://127.0.0.1:8000/priorlevel/` + prior.priorlevel + `/`,\n              fk_idconcept: prior.fk_idconcept\n            },\n            header\n          );\n        } else {\n          await vm.axios.post(\n            `http://127.0.0.1:8000/priorknowledge/`,\n            {\n              namepriorknowledge: prior.namepriorknowledge,\n              priorlevel:\n                `http://127.0.0.1:8000/priorlevel/` + prior.priorlevel + `/`,\n              fk_idconcept: prior.fk_idconcept\n            },\n            header\n          );\n        }\n      });\n    },\n    async putVisible() {\n      var vm = this;\n      var csrftoken = Cookie.get(\"csrftoken\");\n      var headers = {\n        \"X-CSRFTOKEN\": csrftoken\n      };\n      this.treeData.forEach(element => {\n        if (\n          element.visible === true &&\n          !this.selection.find(findElement => findElement.id === element.id)\n        ) {\n          axios\n            .patch(\n              element.id,\n              { headers: headers },\n              {\n                auth: {\n                  username: \"admin\",\n                  password: \"admin\"\n                }\n              }\n            )\n            .then(async function(resposta) {\n              var aux = resposta.data;\n              await Object.keys(aux).forEach(atributo => {\n                if (Array.isArray(aux[atributo])) {\n                  delete aux[atributo];\n                } else if (atributo === \"url\") {\n                  delete aux[atributo];\n                } else if (atributo[0] + atributo[1] === \"id\") {\n                  delete aux[atributo];\n                } else if (atributo === \"visible\") {\n                  aux.visible = false;\n                }\n              });\n              await axios.put(element.id, aux, {\n                auth: {\n                  username: \"admin\",\n                  password: \"admin\"\n                }\n              });\n            });\n        } else if (\n          element.visible === false &&\n          this.selection.find(findElement => findElement.id === element.id)\n        ) {\n          axios\n            .patch(\n              element.id,\n              { headers: headers },\n              {\n                auth: {\n                  username: \"admin\",\n                  password: \"admin\"\n                }\n              }\n            )\n            .then(async function(resposta) {\n              var aux = resposta.data;\n              await Object.keys(aux).forEach(atributo => {\n                if (Array.isArray(aux[atributo])) {\n                  delete aux[atributo];\n                } else if (atributo === \"url\") {\n                  delete aux[atributo];\n                } else if (atributo[0] + atributo[1] === \"id\") {\n                  delete aux[atributo];\n                } else if (atributo === \"visible\") {\n                  aux.visible = true;\n                }\n              });\n              await axios.put(element.id, aux, {\n                auth: {\n                  username: \"admin\",\n                  password: \"admin\"\n                }\n              });\n            });\n        }\n        if (Array.isArray(element.children) && element.children.length) {\n          element.children.forEach(element2 => {\n            if (\n              element2.visible === true &&\n              !this.selection.find(\n                findElement2 => findElement2.id === element2.id\n              )\n            ) {\n              axios\n                .patch(\n                  element2.id,\n                  { headers: headers },\n                  {\n                    auth: {\n                      username: \"admin\",\n                      password: \"admin\"\n                    }\n                  }\n                )\n                .then(async function(resposta) {\n                  var aux = resposta.data;\n                  await Object.keys(aux).forEach(atributo => {\n                    if (Array.isArray(aux[atributo])) {\n                      delete aux[atributo];\n                    } else if (atributo === \"url\") {\n                      delete aux[atributo];\n                    } else if (atributo[0] + atributo[1] === \"id\") {\n                      delete aux[atributo];\n                    } else if (atributo === \"visible\") {\n                      aux.visible = false;\n                    }\n                  });\n\n                  await axios.put(element2.id, aux, {\n                    auth: {\n                      username: \"admin\",\n                      password: \"admin\"\n                    }\n                  });\n                });\n            } else if (\n              element2.visible === false &&\n              this.selection.find(\n                findElement2 => findElement2.id === element2.id\n              )\n            ) {\n              axios\n                .patch(\n                  element2.id,\n                  { headers: headers },\n                  {\n                    auth: {\n                      username: \"admin\",\n                      password: \"admin\"\n                    }\n                  }\n                )\n                .then(async function(resposta) {\n                  var aux = resposta.data;\n                  await Object.keys(aux).forEach(atributo => {\n                    if (Array.isArray(aux[atributo])) {\n                      delete aux[atributo];\n                    } else if (atributo === \"url\") {\n                      delete aux[atributo];\n                    } else if (atributo[0] + atributo[1] === \"id\") {\n                      delete aux[atributo];\n                    } else if (atributo === \"visible\") {\n                      aux.visible = true;\n                    }\n                  });\n\n                  await axios.put(element2.id, aux, {\n                    auth: {\n                      username: \"admin\",\n                      password: \"admin\"\n                    }\n                  });\n                });\n            }\n\n            if (Array.isArray(element2.children) && element2.children.length) {\n              element2.children.forEach(element3 => {\n                if (\n                  element3.visible === true &&\n                  !this.selection.find(\n                    findElement3 => findElement3.id === element3.id\n                  )\n                ) {\n                  axios\n                    .patch(\n                      element3.id,\n                      { headers: headers },\n                      {\n                        auth: {\n                          username: \"admin\",\n                          password: \"admin\"\n                        }\n                      }\n                    )\n                    .then(async function(resposta) {\n                      var aux = resposta.data;\n                      await Object.keys(aux).forEach(atributo => {\n                        if (Array.isArray(aux[atributo])) {\n                          delete aux[atributo];\n                        } else if (atributo === \"url\") {\n                          delete aux[atributo];\n                        } else if (atributo[0] + atributo[1] === \"id\") {\n                          delete aux[atributo];\n                        } else if (atributo === \"visible\") {\n                          aux.visible = false;\n                        }\n                      });\n                      await axios.put(element3.id, aux, {\n                        auth: {\n                          username: \"admin\",\n                          password: \"admin\"\n                        }\n                      });\n                    });\n                } else if (\n                  element3.visible === false &&\n                  this.selection.find(\n                    findElement3 => findElement3.id === element3.id\n                  )\n                ) {\n                  axios\n                    .patch(\n                      element3.id,\n                      { headers: headers },\n                      {\n                        auth: {\n                          username: \"admin\",\n                          password: \"admin\"\n                        }\n                      }\n                    )\n                    .then(async function(resposta) {\n                      var aux = resposta.data;\n                      await Object.keys(aux).forEach(atributo => {\n                        if (Array.isArray(aux[atributo])) {\n                          delete aux[atributo];\n                        } else if (atributo === \"url\") {\n                          delete aux[atributo];\n                        } else if (atributo[0] + atributo[1] === \"id\") {\n                          delete aux[atributo];\n                        } else if (atributo === \"visible\") {\n                          aux.visible = true;\n                        }\n                      });\n                      await axios.put(element3.id, aux, {\n                        auth: {\n                          username: \"admin\",\n                          password: \"admin\"\n                        }\n                      });\n                    });\n                }\n\n                if (\n                  Array.isArray(element3.children) &&\n                  element3.children.length\n                ) {\n                  element3.children.forEach(element4 => {\n                    if (\n                      element4.visible === true &&\n                      !this.selection.find(\n                        findElement4 => findElement4.id === element4.id\n                      )\n                    ) {\n                      axios\n                        .patch(\n                          element4.id,\n                          { headers: headers },\n                          {\n                            auth: {\n                              username: \"admin\",\n                              password: \"admin\"\n                            }\n                          }\n                        )\n                        .then(async function(resposta) {\n                          var aux = resposta.data;\n                          await Object.keys(aux).forEach(atributo => {\n                            if (Array.isArray(aux[atributo])) {\n                              delete aux[atributo];\n                            } else if (atributo === \"url\") {\n                              delete aux[atributo];\n                            } else if (atributo[0] + atributo[1] === \"id\") {\n                              delete aux[atributo];\n                            } else if (atributo === \"visible\") {\n                              aux.visible = false;\n                            }\n                          });\n                          await axios.put(\n                            element4.id,\n                            {\n                              aux\n                            },\n                            {\n                              auth: {\n                                username: \"admin\",\n                                password: \"admin\"\n                              }\n                            }\n                          );\n                        });\n                    } else if (\n                      element4.visible === false &&\n                      this.selection.find(\n                        findElement4 => findElement4.id === element4.id\n                      )\n                    ) {\n                      axios\n                        .patch(\n                          element4.id,\n                          { headers: headers },\n                          {\n                            auth: {\n                              username: \"admin\",\n                              password: \"admin\"\n                            }\n                          }\n                        )\n                        .then(async function(resposta) {\n                          var aux = resposta.data;\n                          await Object.keys(aux).forEach(atributo => {\n                            if (Array.isArray(aux[atributo])) {\n                              delete aux[atributo];\n                            } else if (atributo === \"url\") {\n                              delete aux[atributo];\n                            } else if (atributo[0] + atributo[1] === \"id\") {\n                              delete aux[atributo];\n                            } else if (atributo === \"visible\") {\n                              aux.visible = true;\n                            }\n                          });\n                          await axios.put(\n                            element4.id,\n                            {\n                              aux\n                            },\n                            {\n                              auth: {\n                                username: \"admin\",\n                                password: \"admin\"\n                              }\n                            }\n                          );\n                        });\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n      await setTimeout(async function() {\n        vm.$emit(\"close_or_save\", \"close\");\n      }, 300);\n    },\n\n    deselectAll() {\n      this.selection = [];\n    },\n    selectAll() {\n      var vm = this;\n      this.selection = [];\n      this.treeData.forEach(element => {\n        vm.selection.push(element);\n        if (element.children) {\n          element.children.forEach(element2 => {\n            vm.selection.push(element2);\n            if (element2.children) {\n              element2.children.forEach(element3 => {\n                vm.selection.push(element3);\n                if (element3.children) {\n                  element3.children.forEach(element4 => {\n                    vm.selection.push(element4);\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    addRange(idAssessment) {\n      this.assessmentControl[idAssessment].ranges.push({\n        namerange: \"\",\n        initialvalue: \"\",\n        limitvalue: \"\",\n        url: \"\"\n      });\n    },\n    async deletaRange(idAssessment, idRange) {\n      if (this.assessmentControl[idAssessment].ranges[idRange].url) {\n        var header = await this.$store.dispatch(\"getHeader\");\n        this.axios.delete(\n          this.assessmentControl[idAssessment].ranges[idRange].url,\n          header\n        );\n      }\n      if (idRange == 0) {\n        this.assessmentControl[idAssessment].ranges.shift();\n      } else {\n        this.assessmentControl[idAssessment].ranges.splice(idRange, 1);\n      }\n    },\n    addAssessment() {\n      this.assessmentControl.push({\n        typeThreshold: \"\",\n        scopo: \"\",\n        fk_element: \"\",\n        valueType: \"\",\n        single: {\n          threshold: \"\",\n          url: \"\"\n        },\n        ranges: [],\n        url: \"\"\n      });\n    },\n    async deletaAssessment(idAssessment) {\n      if (this.assessmentControl[idAssessment].url !== null) {\n        var header = await this.$store.dispatch(\"getHeader\");\n        await this.axios.delete(\n          this.assessmentControl[idAssessment].url,\n          header\n        );\n      }\n      if (idAssessment == 0) {\n        this.assessmentControl.shift();\n      } else {\n        this.assessmentControl.splice(idAssessment, 1);\n      }\n    },\n    async deletaSingle(urlSingle) {\n      var header = await this.$store.dispatch(\"getHeader\");\n      await this.axios.delete(urlSingle, header);\n    },\n    addPriorKnowledge() {\n      this.priorControl.push({\n        namepriorknowledge: \"\",\n        priorlevel: \"\",\n        fk_idconcept: \"\",\n        url: \"\"\n      });\n    },\n    async deletaPriorKnowledge(idPrior) {\n      if (this.priorControl[idPrior].url) {\n        var header = await this.$store.dispatch(\"getHeader\");\n        await this.axios.delete(this.priorControl[idPrior].url, header);\n      }\n      if (idPrior == 0) {\n        this.priorControl.shift();\n      } else {\n        this.priorControl.splice(idPrior, 1);\n      }\n    },\n    async validate() {\n      if (this.$refs.form.validate()) {\n        await this.postAssessment();\n        await this.postPriorKnowledges();\n        await this.putVisible();\n        await this.resetVariables();\n      }\n    },\n    reset() {\n      this.$emit(\"close_or_save\", \"close\");\n      this.assessmentControl = [];\n      this.priorControl = [];\n    },\n    resetVariables() {\n      this.assessmentControl = [];\n      this.priorControl = [];\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  }\n};\n</script>"],"sourceRoot":"src/components/didatic_model"}]}