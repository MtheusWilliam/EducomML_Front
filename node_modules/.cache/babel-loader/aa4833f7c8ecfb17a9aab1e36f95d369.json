{"remainingRequest":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js!C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\www\\EducomML\\EducomML_Front\\src\\components\\didatic_model\\AssessmentParameterDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\www\\EducomML\\EducomML_Front\\src\\components\\didatic_model\\AssessmentParameterDialog.vue","mtime":1596411218202},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593634551412},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\babel-loader\\lib\\index.js","mtime":1593634550126},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1593634595918},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593634551412},{"path":"C:\\www\\EducomML\\EducomML_Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1593634595223}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AssessmentParameterDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-card>\r\n    <v-card-title style=\"background-color:purple; color:white;\">\r\n      <span class=\"headline\">\r\n        <p>Defina as informações equivalentes aos parâmetros de avaliação.</p>\r\n      </span>\r\n    </v-card-title>\r\n    <v-row class=\"mx-0 px-0\">\r\n      <v-row class=\"mx-0 px-0 pl-6\">\r\n        <h3 class=\"mt-5\">Parâmetros de avaliação</h3>\r\n        <v-btn icon=\"icon\" class=\"mb-1\">\r\n          <v-icon large class=\"mt-9 ml-2\" color=\"primary\" @click=\"addAssessment()\">mdi-plus-box</v-icon>\r\n        </v-btn>\r\n      </v-row>\r\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n        <v-row\r\n          v-for=\"(assessment, i) in assessmentControl\"\r\n          :key=\"i\"\r\n          style=\"margin-bottom: -20px;\"\r\n          class=\"mx-0 px-0 pl-6\"\r\n        >\r\n          <v-col cols=\"2\">\r\n            <v-select\r\n              v-model=\"assessmentControl[i].scopo\"\r\n              :items=\"scopoTypes\"\r\n              :rules=\"[v => !!v || 'Conceito é requerido']\"\r\n              label=\"Scopo\"\r\n              style=\"margin:0px;\"\r\n              required\r\n            ></v-select>\r\n          </v-col>\r\n          <v-col cols=\"3\">\r\n            <v-select\r\n              v-model=\"assessmentControl[i].fk_element\"\r\n              :items=\"elementData\"\r\n              :rules=\"[v => !!v || 'O tipo do conceito é requerido']\"\r\n              label=\"Elemento\"\r\n              style=\"margin:0px;\"\r\n              required\r\n            ></v-select>\r\n          </v-col>\r\n          <v-col cols=\"3\">\r\n            <v-select\r\n              v-model=\"assessmentControl[i].typeThreshold\"\r\n              :items=\"typesThreshold\"\r\n              :rules=\"[v => !!v || 'O tipo do conceito é requerido']\"\r\n              label=\"Tipo de Threshold\"\r\n              style=\"margin:0px;\"\r\n              required\r\n            ></v-select>\r\n          </v-col>\r\n          <v-col cols=\"2\">\r\n            <v-select\r\n              style=\"margin-top: -1px;\"\r\n              v-model=\"assessmentControl[i].valueType\"\r\n              :items=\"valueTypes\"\r\n              :rules=\"[v => !!v || 'O tipo de dado é requerido']\"\r\n              label=\"Tipo de Dado\"\r\n              required\r\n            ></v-select>\r\n            <v-text-field\r\n              style=\"margin-top: -1px; margin-bottom: -10px;\"\r\n              v-if=\"assessmentControl[i].valueType==='Single'\"\r\n              v-model=\"assessmentControl[i].single.threshold\"\r\n              label=\"Valor\"\r\n              :suffix=\" assessmentControl[i].typeThreshold===1 ? '%' : ''\"\r\n              required\r\n            ></v-text-field>\r\n          </v-col>\r\n\r\n          <v-col cols=\"2\" class=\"mt-2\">\r\n            <v-btn icon=\"icon\" class=\"mb-1\" v-if=\"assessmentControl[i].valueType==='Range'\">\r\n              <v-icon large class=\"mb-1\" color=\"primary\" @click=\"addRange(i)\">mdi-plus-box</v-icon>\r\n            </v-btn>\r\n            <v-btn icon=\"icon\" class=\"mb-1\">\r\n              <v-icon large class=\"mb-1\" color=\"red\" @click=\"deletaAssessment(i)\">mdi-minus-box</v-icon>\r\n            </v-btn>\r\n          </v-col>\r\n          <v-row v-if=\"assessmentControl[i].valueType === 'Single'\" style=\"margin-top: -40px;\">\r\n            <v-col cols=\"7\"></v-col>\r\n            <v-col cols=\"2\" class=\"ml-10\"></v-col>\r\n          </v-row>\r\n          <div v-else>\r\n            <v-row\r\n              v-for=\"(range, idRange) in assessment.ranges\"\r\n              :key=\"idRange\"\r\n              style=\"margin-top: -30px;\"\r\n            >\r\n              <v-col cols=\"4\"></v-col>\r\n              <v-col cols=\"3\">\r\n                <v-text-field\r\n                  v-model=\"assessmentControl[i].ranges[idRange].namerange\"\r\n                  counter=\"15\"\r\n                  label=\"Nome do range\"\r\n                  style=\"margin:0px;\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"2\">\r\n                <v-text-field\r\n                  v-model=\"assessmentControl[i].ranges[idRange].initialvalue\"\r\n                  label=\"Valor inicial\"\r\n                  style=\"margin:0px;\"\r\n                  type=\"number\"\r\n                  :suffix=\" assessmentControl[i].typeThreshold===1 ? '%' : ''\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"2\">\r\n                <v-text-field\r\n                  v-model=\"assessmentControl[i].ranges[idRange].limitvalue\"\r\n                  label=\"Valor Limite\"\r\n                  style=\"margin:0px;\"\r\n                  type=\"number\"\r\n                  :suffix=\" assessmentControl[i].typeThreshold===1 ? '%' : ''\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"1\">\r\n                <v-btn icon=\"icon\" class=\"mt-4\">\r\n                  <v-icon\r\n                    large\r\n                    class=\"mb-1\"\r\n                    color=\"red\"\r\n                    @click=\"deletaRange(i, idRange)\"\r\n                  >mdi-minus-box</v-icon>\r\n                </v-btn>\r\n              </v-col>\r\n            </v-row>\r\n          </div>\r\n        </v-row>\r\n      </v-form>\r\n    </v-row>\r\n    <v-card-actions>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"red\" height=\"49\" dark large @click=\"reset\">\r\n        Cancelar\r\n        <v-icon dark right>mdi-close</v-icon>\r\n      </v-btn>\r\n      <v-btn color=\"success\" height=\"49\" dark large @click=\"validate\">\r\n        Salvar\r\n        <v-icon dark right>mdi-content-save</v-icon>\r\n      </v-btn>\r\n    </v-card-actions>\r\n    <div class=\"text-center\">\r\n      <v-dialog v-model=\"dialogError\" width=\"500\">\r\n        <v-card>\r\n          <v-card-title class=\"headline red\" primary-title style=\"color:white;\">ALERTA!</v-card-title>\r\n          <v-card-text class=\"mt-3\" style=\"font-size: 1.3em;\">{{messageError}}</v-card-text>\r\n          <v-divider></v-divider>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"primary\" text @click=\"dialogError = false\">Ok</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n    </div>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"VisibleDialog\",\r\n  props: [\"domain\", \"dialog\"],\r\n  data: () => ({\r\n    valid: true,\r\n    treeData: [],\r\n    selection: [],\r\n    elementData: [],\r\n    scopoTypes: [\r\n      {\r\n        text: \"Avaliação\",\r\n        value: 1,\r\n      },\r\n      {\r\n        text: \"Domínio\",\r\n        value: 2,\r\n      },\r\n    ],\r\n    typesThreshold: [\r\n      {\r\n        text: \"Porcentagem\",\r\n        value: 1,\r\n      },\r\n      {\r\n        text: \"Literal\",\r\n        value: 2,\r\n      },\r\n    ],\r\n    valueTypes: [\"Single\", \"Range\"],\r\n    assessmentControl: [],\r\n    dialogError: false,\r\n    messageError: \"\",\r\n    newItems: [],\r\n    checkbox: true,\r\n  }),\r\n  watch: {\r\n    domain: async function () {\r\n      this.assessmentControl = [];\r\n      if (this.domain) {\r\n        await this.getAssessments();\r\n        await this.setDomainVariables();\r\n      }\r\n    },\r\n    dialog: async function () {\r\n      this.assessmentControl = [];\r\n      if (this.domain) {\r\n        await this.getAssessments();\r\n        await this.setDomainVariables();\r\n      }\r\n    },\r\n    assessmentControl: function () {\r\n      this.assessmentControl.forEach((assess) => {\r\n        if (assess.valueType === \"Single\") {\r\n          assess.ranges.forEach((range) => {\r\n            if (range.url) {\r\n              this.deletaSingle(range.url);\r\n            }\r\n          });\r\n          assess.ranges = [];\r\n        } else if (assess.valueType === \"Range\") {\r\n          if (assess.single.url) {\r\n            this.deletaSingle(assess.single.url);\r\n            assess.single.url = \"\";\r\n          }\r\n          assess.single.threshold = \"\";\r\n        }\r\n      });\r\n    },\r\n  },\r\n  mounted: async function () {\r\n    this.assessmentControl = [];\r\n    if (this.domain) {\r\n      await this.getAssessments();\r\n      await this.setDomainVariables();\r\n    }\r\n  },\r\n  methods: {\r\n    setDomainVariables() {\r\n      this.elementData.push({\r\n        text: \"[DOMINIO] \" + this.domain.nameknowledgedomain,\r\n        value: this.domain.url,\r\n      });\r\n      if (Array.isArray(this.domain.modules) && this.domain.modules.length) {\r\n        this.domain.modules.forEach((modulo) => {\r\n          if (modulo.fk_idmodule === null) {\r\n            var object = {\r\n              id: modulo.url,\r\n              name: \"[MODULO] \" + modulo.namemodule,\r\n              visible: modulo.visible,\r\n              children: [],\r\n            };\r\n            this.elementData.push({\r\n              text: object.name,\r\n              value: object.id,\r\n            });\r\n            if (modulo.submodules.length) {\r\n              modulo.submodules.forEach((submodulo) => {\r\n                var object = {\r\n                  id: submodulo.url,\r\n                  name: \"[SUBMODULO] \" + submodulo.namemodule,\r\n                  visible: submodulo.visible,\r\n                  children: [],\r\n                };\r\n                this.elementData.push({\r\n                  text: object.name,\r\n                  value: object.id,\r\n                });\r\n\r\n                if (submodulo.concepts.length) {\r\n                  submodulo.concepts.forEach((conceito) => {\r\n                    var object = {\r\n                      id: conceito.url,\r\n                      name: \"[CONCEITO] \" + conceito.nameconcept,\r\n                      visible: conceito.visible,\r\n                      children: [],\r\n                    };\r\n                    this.elementData.push({\r\n                      text: object.name,\r\n                      value: object.id,\r\n                    });\r\n                  });\r\n                }\r\n              });\r\n            }\r\n            if (modulo.concepts.length) {\r\n              modulo.concepts.forEach((conceito) => {\r\n                var object = {\r\n                  id: conceito.url,\r\n                  name: \"[CONCEITO] \" + conceito.nameconcept,\r\n                  visible: conceito.visible,\r\n                  children: [],\r\n                };\r\n                this.elementData.push({\r\n                  text: object.name,\r\n                  value: object.id,\r\n                });\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    getAssessments() {\r\n      // var vm = this;\r\n      if (this.domain) {\r\n        if (this.domain.assessmentparameter.length > 0) {\r\n          var assess = {\r\n            typeThreshold: parseInt(\r\n              this.domain.assessmentparameter[0].typethreshold.split(\"/\")[4]\r\n            ),\r\n            scopo: parseInt(\r\n              this.domain.assessmentparameter[0].scopo.split(\"/\")[4]\r\n            ),\r\n            fk_element: this.domain.assessmentparameter[0].fk_idknowledgedomain,\r\n            valueType: \"\",\r\n            single: {\r\n              threshold: \"\",\r\n              url: \"\",\r\n            },\r\n            ranges: [],\r\n            url: this.domain.assessmentparameter[0].url,\r\n          };\r\n          if (this.domain.assessmentparameter[0].single.length > 0) {\r\n            assess.valueType = \"Single\";\r\n            assess.single.threshold = this.domain.assessmentparameter[0].single[0].threshold;\r\n            assess.single.url = this.domain.assessmentparameter[0].single[0].url;\r\n          } else if (this.domain.assessmentparameter[0].ranges.length > 0) {\r\n            assess.valueType = \"Range\";\r\n            this.domain.assessmentparameter[0].ranges.forEach((range) => {\r\n              assess.ranges.push({\r\n                namerange: range.namerange,\r\n                initialvalue: range.initialvalue,\r\n                limitvalue: range.limitvalue,\r\n                url: range.url,\r\n              });\r\n            });\r\n          }\r\n          this.assessmentControl.push(assess);\r\n        }\r\n        if (this.domain.modules) {\r\n          this.domain.modules.forEach((module) => {\r\n            if (module.assessmentparameter.length > 0) {\r\n              var assess = {\r\n                typeThreshold: parseInt(\r\n                  module.assessmentparameter[0].typethreshold.split(\"/\")[4]\r\n                ),\r\n                scopo: parseInt(\r\n                  module.assessmentparameter[0].scopo.split(\"/\")[4]\r\n                ),\r\n                fk_element: module.url,\r\n                valueType: \"\",\r\n                single: {\r\n                  threshold: \"\",\r\n                  url: \"\",\r\n                },\r\n                ranges: [],\r\n                url: module.assessmentparameter[0].url,\r\n              };\r\n              if (module.assessmentparameter[0].single.length > 0) {\r\n                assess.valueType = \"Single\";\r\n                assess.single.threshold =\r\n                  module.assessmentparameter[0].single[0].threshold;\r\n                assess.single.url = module.assessmentparameter[0].single[0].url;\r\n              } else if (module.assessmentparameter[0].ranges.length > 0) {\r\n                assess.valueType = \"Range\";\r\n                module.assessmentparameter[0].ranges.forEach((range) => {\r\n                  assess.ranges.push({\r\n                    namerange: range.namerange,\r\n                    initialvalue: range.initialvalue,\r\n                    limitvalue: range.limitvalue,\r\n                    url: range.url,\r\n                  });\r\n                });\r\n              }\r\n              this.assessmentControl.push(assess);\r\n            }\r\n            if (module.concepts) {\r\n              module.concepts.forEach((moduleConcept) => {\r\n                if (moduleConcept.assessmentparameter.length > 0) {\r\n                  var assess = {\r\n                    typeThreshold: parseInt(\r\n                      moduleConcept.assessmentparameter[0].typethreshold.split(\r\n                        \"/\"\r\n                      )[4]\r\n                    ),\r\n                    scopo: parseInt(\r\n                      moduleConcept.assessmentparameter[0].scopo.split(\"/\")[4]\r\n                    ),\r\n                    fk_element: moduleConcept.url,\r\n                    valueType: \"\",\r\n                    single: {\r\n                      threshold: \"\",\r\n                      url: \"\",\r\n                    },\r\n                    ranges: [],\r\n                    url: moduleConcept.assessmentparameter[0].url,\r\n                  };\r\n                  if (moduleConcept.assessmentparameter[0].single.length > 0) {\r\n                    assess.valueType = \"Single\";\r\n                    assess.single.threshold =\r\n                      moduleConcept.assessmentparameter[0].single[0].threshold;\r\n                    assess.single.url =\r\n                      moduleConcept.assessmentparameter[0].single[0].url;\r\n                  } else if (\r\n                    moduleConcept.assessmentparameter[0].ranges.length > 0\r\n                  ) {\r\n                    assess.valueType = \"Range\";\r\n                    moduleConcept.assessmentparameter[0].ranges.forEach(\r\n                      (range) => {\r\n                        assess.ranges.push({\r\n                          namerange: range.namerange,\r\n                          initialvalue: range.initialvalue,\r\n                          limitvalue: range.limitvalue,\r\n                          url: range.url,\r\n                        });\r\n                      }\r\n                    );\r\n                  }\r\n                  this.assessmentControl.push(assess);\r\n                }\r\n              });\r\n            }\r\n            if (module.submodules) {\r\n              module.submodules.forEach((submodule) => {\r\n                if (submodule.assessmentparameter.length > 0) {\r\n                  var assess = {\r\n                    typeThreshold: parseInt(\r\n                      submodule.assessmentparameter[0].typethreshold.split(\r\n                        \"/\"\r\n                      )[4]\r\n                    ),\r\n                    scopo: parseInt(\r\n                      submodule.assessmentparameter[0].scopo.split(\"/\")[4]\r\n                    ),\r\n                    fk_element: submodule.url,\r\n                    valueType: \"\",\r\n                    single: {\r\n                      threshold: \"\",\r\n                      url: \"\",\r\n                    },\r\n                    ranges: [],\r\n                    url: submodule.assessmentparameter[0].url,\r\n                  };\r\n                  if (submodule.assessmentparameter[0].single.length > 0) {\r\n                    assess.valueType = \"Single\";\r\n                    assess.single.threshold =\r\n                      submodule.assessmentparameter[0].single[0].threshold;\r\n                    assess.single.url =\r\n                      submodule.assessmentparameter[0].single[0].url;\r\n                  } else if (\r\n                    submodule.assessmentparameter[0].ranges.length > 0\r\n                  ) {\r\n                    assess.valueType = \"Range\";\r\n                    submodule.assessmentparameter[0].ranges.forEach((range) => {\r\n                      assess.ranges.push({\r\n                        namerange: range.namerange,\r\n                        initialvalue: range.initialvalue,\r\n                        limitvalue: range.limitvalue,\r\n                        url: range.url,\r\n                      });\r\n                    });\r\n                  }\r\n                  this.assessmentControl.push(assess);\r\n                }\r\n                if (submodule.concepts) {\r\n                  submodule.concepts.forEach((submoduleConcept) => {\r\n                    if (submoduleConcept.assessmentparameter.length > 0) {\r\n                      var assess = {\r\n                        typeThreshold: parseInt(\r\n                          submoduleConcept.assessmentparameter[0].typethreshold.split(\r\n                            \"/\"\r\n                          )[4]\r\n                        ),\r\n                        scopo: parseInt(\r\n                          submoduleConcept.assessmentparameter[0].scopo.split(\r\n                            \"/\"\r\n                          )[4]\r\n                        ),\r\n                        fk_element: submoduleConcept.url,\r\n                        valueType: \"\",\r\n                        single: {\r\n                          threshold: \"\",\r\n                          url: \"\",\r\n                        },\r\n                        ranges: [],\r\n                        url: submoduleConcept.assessmentparameter[0].url,\r\n                      };\r\n                      if (\r\n                        submoduleConcept.assessmentparameter[0].single.length >\r\n                        0\r\n                      ) {\r\n                        assess.valueType = \"Single\";\r\n                        assess.single.threshold =\r\n                          submoduleConcept.assessmentparameter[0].single[0].threshold;\r\n                        assess.single.url =\r\n                          submoduleConcept.assessmentparameter[0].single[0].url;\r\n                      } else if (\r\n                        submoduleConcept.assessmentparameter[0].ranges.length >\r\n                        0\r\n                      ) {\r\n                        assess.valueType = \"Range\";\r\n                        submoduleConcept.assessmentparameter[0].ranges.forEach(\r\n                          (range) => {\r\n                            assess.ranges.push({\r\n                              namerange: range.namerange,\r\n                              initialvalue: range.initialvalue,\r\n                              limitvalue: range.limitvalue,\r\n                              url: range.url,\r\n                            });\r\n                          }\r\n                        );\r\n                      }\r\n                      this.assessmentControl.push(assess);\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async postAssessment() {\r\n      var vm = this;\r\n      var header = await this.$store.dispatch(\"getHeader\");\r\n      await this.assessmentControl.forEach(async (assessment) => {\r\n        var auxAssessment = {\r\n          typethreshold:\r\n            `http://127.0.0.1:8000/typethreshold/` +\r\n            assessment.typeThreshold +\r\n            `/`,\r\n          scopo: `http://127.0.0.1:8000/scopo/` + assessment.scopo + `/`,\r\n          fk_idknowledgedomain: null,\r\n          fk_idmodule: null,\r\n          fk_idconcept: null,\r\n        };\r\n        if (assessment.fk_element.split(\"/\")[3] === \"knowledgedomain\") {\r\n          auxAssessment.fk_idknowledgedomain = assessment.fk_element;\r\n        } else if (assessment.fk_element.split(\"/\")[3] === \"module\") {\r\n          auxAssessment.fk_idmodule = assessment.fk_element;\r\n        } else if (assessment.fk_element.split(\"/\")[3] === \"concept\") {\r\n          auxAssessment.fk_idconcept = assessment.fk_element;\r\n        }\r\n\r\n        if (assessment.url) {\r\n          await this.axios\r\n            .put(assessment.url, auxAssessment, header)\r\n            .then(async function (resposta) {\r\n              if (assessment.valueType === \"Single\") {\r\n                if (assessment.ranges) {\r\n                  assessment.ranges.forEach((range) => {\r\n                    if (range.url) {\r\n                      vm.axios.delete(range.url, header);\r\n                    }\r\n                  });\r\n                }\r\n                await vm.axios.put(\r\n                  assessment.single.url,\r\n                  {\r\n                    fk_idassessmentparameter: resposta.data.url,\r\n                    threshold: assessment.single.threshold,\r\n                  },\r\n                  header\r\n                );\r\n              } else if (assessment.valueType === \"Range\") {\r\n                if (assessment.single.url) {\r\n                  vm.axios.delete(assessment.single.url, header);\r\n                }\r\n                assessment.ranges.forEach(async (range) => {\r\n                  if (range.url) {\r\n                    await vm.axios.put(\r\n                      range.url,\r\n                      {\r\n                        namerange: range.namerange,\r\n                        fk_idassessmentparameter: resposta.data.url,\r\n                        initialvalue: range.initialvalue,\r\n                        limitvalue: range.limitvalue,\r\n                      },\r\n                      header\r\n                    );\r\n                  } else {\r\n                    await vm.axios.post(\r\n                      \"http://127.0.0.1:8000/range/\",\r\n                      {\r\n                        namerange: range.namerange,\r\n                        fk_idassessmentparameter: resposta.data.url,\r\n                        initialvalue: range.initialvalue,\r\n                        limitvalue: range.limitvalue,\r\n                      },\r\n                      header\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          await this.axios\r\n            .post(\r\n              \"http://127.0.0.1:8000/assessmentparameter/\",\r\n              auxAssessment,\r\n              header\r\n            )\r\n            .then(async function (resposta) {\r\n              if (assessment.valueType === \"Single\") {\r\n                await vm.axios.post(\r\n                  \"http://127.0.0.1:8000/single/\",\r\n                  {\r\n                    fk_idassessmentparameter: resposta.data.url,\r\n                    threshold: assessment.single.threshold,\r\n                  },\r\n                  header\r\n                );\r\n              } else if (assessment.valueType === \"Range\") {\r\n                assessment.ranges.forEach(async (range) => {\r\n                  await vm.axios.post(\r\n                    \"http://127.0.0.1:8000/range/\",\r\n                    {\r\n                      namerange: range.namerange,\r\n                      fk_idassessmentparameter: resposta.data.url,\r\n                      initialvalue: range.initialvalue,\r\n                      limitvalue: range.limitvalue,\r\n                    },\r\n                    header\r\n                  );\r\n                });\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n    addRange(idAssessment) {\r\n      this.assessmentControl[idAssessment].ranges.push({\r\n        namerange: \"\",\r\n        initialvalue: \"\",\r\n        limitvalue: \"\",\r\n        url: \"\",\r\n      });\r\n    },\r\n    async deletaRange(idAssessment, idRange) {\r\n      if (this.assessmentControl[idAssessment].ranges[idRange].url) {\r\n        var header = await this.$store.dispatch(\"getHeader\");\r\n        this.axios.delete(\r\n          this.assessmentControl[idAssessment].ranges[idRange].url,\r\n          header\r\n        );\r\n      }\r\n      if (idRange == 0) {\r\n        this.assessmentControl[idAssessment].ranges.shift();\r\n      } else {\r\n        this.assessmentControl[idAssessment].ranges.splice(idRange, 1);\r\n      }\r\n    },\r\n    addAssessment() {\r\n      this.assessmentControl.push({\r\n        typeThreshold: \"\",\r\n        scopo: \"\",\r\n        fk_element: \"\",\r\n        valueType: \"\",\r\n        single: {\r\n          threshold: \"\",\r\n          url: \"\",\r\n        },\r\n        ranges: [],\r\n        url: \"\",\r\n      });\r\n    },\r\n    async deletaAssessment(idAssessment) {\r\n      if (this.assessmentControl[idAssessment].url !== null) {\r\n        var header = await this.$store.dispatch(\"getHeader\");\r\n        await this.axios.delete(\r\n          this.assessmentControl[idAssessment].url,\r\n          header\r\n        );\r\n      }\r\n      if (idAssessment == 0) {\r\n        this.assessmentControl.shift();\r\n      } else {\r\n        this.assessmentControl.splice(idAssessment, 1);\r\n      }\r\n    },\r\n    async deletaSingle(urlSingle) {\r\n      var header = await this.$store.dispatch(\"getHeader\");\r\n      await this.axios.delete(urlSingle, header);\r\n    },\r\n    async validate() {\r\n      if (this.$refs.form.validate()) {\r\n        var auxLoopValidation = 1;\r\n        for (var i = 0; i < this.assessmentControl.length; i++) {\r\n          for (var j = 0; j < this.assessmentControl.length; j++) {\r\n            if (\r\n              this.assessmentControl[i].fk_element ===\r\n                this.assessmentControl[j].fk_element &&\r\n              i !== j\r\n            ) {\r\n              auxLoopValidation = 0;\r\n              this.messageError =\r\n                \"Não pode existir mais de um parâmetro de avaliação para o mesmo elemento. Verifique os parâmetros de avaliação \" +\r\n                (j + 1) +\r\n                \" e \" +\r\n                (i + 1) +\r\n                \".\";\r\n              this.dialogError = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (auxLoopValidation === 1) {\r\n          await this.postAssessment();\r\n          await this.putVisible();\r\n          await this.resetVariables();\r\n          await this.$emit(\"close_or_save\", \"save\");\r\n        }\r\n      }\r\n    },\r\n    reset() {\r\n      this.$emit(\"close_or_save\", \"close\");\r\n      this.assessmentControl = [];\r\n    },\r\n    resetVariables() {\r\n      this.assessmentControl = [];\r\n    },\r\n    resetValidation() {\r\n      this.$refs.form.resetValidation();\r\n    },\r\n  },\r\n};\r\n</script>"],"sourceRoot":"src/components/didatic_model"}]}